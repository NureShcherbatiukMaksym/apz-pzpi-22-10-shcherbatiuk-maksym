{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\MapPolygonPicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { GoogleMap, LoadScript, Polygon } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\"\n};\nconst center = {\n  lat: 48.3794,\n  // Центр України\n  lng: 31.1656\n};\nconst MapPolygonPicker = ({\n  onPolygonComplete,\n  setManualCoordsFromMap\n}) => {\n  _s();\n  const [paths, setPaths] = useState([]);\n  const mapRef = useRef(null);\n  const handleClick = useCallback(event => {\n    const newPoint = {\n      lat: parseFloat(event.latLng.lat().toFixed(6)),\n      lng: parseFloat(event.latLng.lng().toFixed(6))\n    };\n    setPaths(prev => {\n      const updated = [...prev, newPoint];\n\n      // Формуємо текст для вставки в textarea\n      const coordsText = updated.map(point => `[${point.lat}, ${point.lng}]`).join(\",\\n\");\n\n      // Передаємо в батьківський компонент\n      if (setManualCoordsFromMap) {\n        setManualCoordsFromMap(coordsText);\n      }\n      return updated;\n    });\n  }, [setManualCoordsFromMap]);\n  const handleComplete = () => {\n    if (paths.length < 3) {\n      alert(\"Позначте хоча б три точки, щоб утворити полігон\");\n      return;\n    }\n\n    // Перетворюємо [{lat, lng}, ...] -> [[lat, lng], ...]\n    const simplified = paths.map(p => [p.lat, p.lng]);\n    if (onPolygonComplete) {\n      onPolygonComplete(simplified);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyC6-KT4EaMNrVuln5DQ5Xn8e8n4kZwsKMU\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 6,\n        onClick: handleClick,\n        onLoad: map => mapRef.current = map,\n        children: paths.length > 0 && /*#__PURE__*/_jsxDEV(Polygon, {\n          path: paths,\n          options: {\n            fillColor: \"#00FF00\",\n            fillOpacity: 0.3,\n            strokeColor: \"#00AA00\",\n            strokeOpacity: 1,\n            strokeWeight: 2,\n            editable: true,\n            draggable: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-4 bg-green-500 text-white px-4 py-2 rounded\",\n      onClick: handleComplete,\n      children: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0438 \\u043F\\u043E\\u043B\\u0456\\u0433\\u043E\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPolygonPicker, \"uLgtkStNlmMEZd893+b6Xs5hU40=\");\n_c = MapPolygonPicker;\nexport default MapPolygonPicker;\nvar _c;\n$RefreshReg$(_c, \"MapPolygonPicker\");","map":{"version":3,"names":["React","useCallback","useState","useRef","useEffect","GoogleMap","LoadScript","Polygon","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapPolygonPicker","onPolygonComplete","setManualCoordsFromMap","_s","paths","setPaths","mapRef","handleClick","event","newPoint","parseFloat","latLng","toFixed","prev","updated","coordsText","map","point","join","handleComplete","length","alert","simplified","p","children","googleMapsApiKey","mapContainerStyle","zoom","onClick","onLoad","current","path","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","editable","draggable","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/MapPolygonPicker.jsx"],"sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport { GoogleMap, LoadScript, Polygon } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n};\r\n\r\nconst center = {\r\n    lat: 48.3794, // Центр України\r\n    lng: 31.1656,\r\n};\r\n\r\nconst MapPolygonPicker = ({ onPolygonComplete, setManualCoordsFromMap }) => {\r\n    const [paths, setPaths] = useState([]);\r\n    const mapRef = useRef(null);\r\n\r\n    const handleClick = useCallback((event) => {\r\n        const newPoint = {\r\n            lat: parseFloat(event.latLng.lat().toFixed(6)),\r\n            lng: parseFloat(event.latLng.lng().toFixed(6)),\r\n        };\r\n\r\n        setPaths((prev) => {\r\n            const updated = [...prev, newPoint];\r\n\r\n            // Формуємо текст для вставки в textarea\r\n            const coordsText = updated\r\n                .map((point) => `[${point.lat}, ${point.lng}]`)\r\n                .join(\",\\n\");\r\n\r\n            // Передаємо в батьківський компонент\r\n            if (setManualCoordsFromMap) {\r\n                setManualCoordsFromMap(coordsText);\r\n            }\r\n\r\n            return updated;\r\n        });\r\n    }, [setManualCoordsFromMap]);\r\n\r\n    const handleComplete = () => {\r\n        if (paths.length < 3) {\r\n            alert(\"Позначте хоча б три точки, щоб утворити полігон\");\r\n            return;\r\n        }\r\n\r\n        // Перетворюємо [{lat, lng}, ...] -> [[lat, lng], ...]\r\n        const simplified = paths.map(p => [p.lat, p.lng]);\r\n\r\n        if (onPolygonComplete) {\r\n            onPolygonComplete(simplified);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC6-KT4EaMNrVuln5DQ5Xn8e8n4kZwsKMU\">\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={6}\r\n                    onClick={handleClick}\r\n                    onLoad={(map) => (mapRef.current = map)}\r\n                >\r\n                    {paths.length > 0 && (\r\n                        <Polygon\r\n                            path={paths}\r\n                            options={{\r\n                                fillColor: \"#00FF00\",\r\n                                fillOpacity: 0.3,\r\n                                strokeColor: \"#00AA00\",\r\n                                strokeOpacity: 1,\r\n                                strokeWeight: 2,\r\n                                editable: true,\r\n                                draggable: false,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </GoogleMap>\r\n            </LoadScript>\r\n\r\n            <button\r\n                className=\"mt-4 bg-green-500 text-white px-4 py-2 rounded\"\r\n                onClick={handleComplete}\r\n            >\r\n                Підтвердити полігон\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPolygonPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}