{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\utils\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// components/ProtectedRoute.js\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { UserContext } from '../contexts/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  // Отримуємо user, hasDevice та нові стани завантаження\n  const {\n    user,\n    hasDevice,\n    loadingInitial,\n    loadingDevice\n  } = useContext(UserContext);\n  const location = useLocation();\n\n  // Показуємо завантаження, якщо йде початкова перевірка або перевірка пристрою\n  if (loadingInitial || loadingDevice) {\n    // Можна повернути спінер або інший індикатор завантаження\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\\u0443 \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Якщо user null після завершення завантаження, перенаправляємо на логін.\n  // Навігація в App.js також спрацює, але це для безпеки.\n  if (!user) {\n    console.log('ProtectedRoute: Access denied (user is null). Rendering Navigate to /login.');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Якщо користувач автентифікований (user не null), але не має пристрою\n  if (!hasDevice) {\n    console.log('ProtectedRoute: Access denied (no device). Redirecting to /get-device.');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        reason: 'no-device',\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Якщо користувач автентифікований І має пристрої - рендеримо захищений контент\n  console.log('ProtectedRoute: Access granted.');\n  return children;\n};\n_s(ProtectedRoute, \"rqVXS5cMexbtlkgmCKF252RNiCk=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","UserContext","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","hasDevice","loadingInitial","loadingDevice","location","fileName","_jsxFileName","lineNumber","columnNumber","console","log","to","state","from","replace","reason","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/utils/PrivateRoute.js"],"sourcesContent":["// components/ProtectedRoute.js\r\nimport React, { useContext } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    // Отримуємо user, hasDevice та нові стани завантаження\r\n    const { user, hasDevice, loadingInitial, loadingDevice } = useContext(UserContext);\r\n    const location = useLocation();\r\n\r\n    // Показуємо завантаження, якщо йде початкова перевірка або перевірка пристрою\r\n    if (loadingInitial || loadingDevice) {\r\n        // Можна повернути спінер або інший індикатор завантаження\r\n        return <div>Завантаження статусу користувача...</div>;\r\n    }\r\n\r\n    // Якщо user null після завершення завантаження, перенаправляємо на логін.\r\n    // Навігація в App.js також спрацює, але це для безпеки.\r\n    if (!user) {\r\n        console.log('ProtectedRoute: Access denied (user is null). Rendering Navigate to /login.');\r\n        return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n    }\r\n\r\n    // Якщо користувач автентифікований (user не null), але не має пристрою\r\n    if (!hasDevice) {\r\n        console.log('ProtectedRoute: Access denied (no device). Redirecting to /get-device.');\r\n        return <Navigate to=\"/login\" state={{ reason: 'no-device', from: location }} replace />;\r\n    }\r\n\r\n    // Якщо користувач автентифікований І має пристрої - рендеримо захищений контент\r\n    console.log('ProtectedRoute: Access granted.');\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC;EACA,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EAClF,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIS,cAAc,IAAIC,aAAa,EAAE;IACjC;IACA,oBAAOP,OAAA;MAAAE,QAAA,EAAK;IAAmC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzD;;EAEA;EACA;EACA,IAAI,CAACR,IAAI,EAAE;IACPS,OAAO,CAACC,GAAG,CAAC,6EAA6E,CAAC;IAC1F,oBAAOd,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAET;MAAS,CAAE;MAACU,OAAO;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtE;;EAEA;EACA,IAAI,CAACP,SAAS,EAAE;IACZQ,OAAO,CAACC,GAAG,CAAC,wEAAwE,CAAC;IACrF,oBAAOd,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEG,MAAM,EAAE,WAAW;QAAEF,IAAI,EAAET;MAAS,CAAE;MAACU,OAAO;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3F;;EAEA;EACAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAC9C,OAAOZ,QAAQ;AACnB,CAAC;AAACC,EAAA,CA3BIF,cAAc;EAAA,QAGCJ,WAAW;AAAA;AAAAuB,EAAA,GAH1BnB,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}