{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [hasDevice, setHasDevice] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // 1. Отримуємо дані користувача\n        const userRes = await api.get('/users/me');\n        const userData = userRes.data;\n        setUser(userData);\n        setIsAdmin(Boolean(userData.is_admin)); // опціонально\n\n        // 2. Отримуємо дані про пристрої користувача\n        const devicesRes = await api.get('/user-iot-devices/');\n        const devices = devicesRes.data;\n\n        // Якщо є хоча б один пристрій, setHasDevice буде true\n        setHasDevice(devices.length > 0);\n      } catch (err) {\n        console.error('Користувач не авторизований або не вдалося отримати пристрої');\n        setUser(null);\n        setIsAdmin(false);\n        setHasDevice(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      isAdmin,\n      hasDevice,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"CG59zMrrHbJ/FsstrefuvbH3ln4=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","isAdmin","setIsAdmin","hasDevice","setHasDevice","loading","setLoading","fetchUserData","userRes","get","userData","data","Boolean","is_admin","devicesRes","devices","length","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [hasDevice, setHasDevice] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                // 1. Отримуємо дані користувача\r\n                const userRes = await api.get('/users/me');\r\n                const userData = userRes.data;\r\n\r\n                setUser(userData);\r\n                setIsAdmin(Boolean(userData.is_admin)); // опціонально\r\n\r\n                // 2. Отримуємо дані про пристрої користувача\r\n                const devicesRes = await api.get('/user-iot-devices/');\r\n                const devices = devicesRes.data;\r\n\r\n                // Якщо є хоча б один пристрій, setHasDevice буде true\r\n                setHasDevice(devices.length > 0);\r\n            } catch (err) {\r\n                console.error('Користувач не авторизований або не вдалося отримати пристрої');\r\n                setUser(null);\r\n                setIsAdmin(false);\r\n                setHasDevice(false);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, isAdmin, hasDevice, loading }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA;QACA,MAAMC,OAAO,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,WAAW,CAAC;QAC1C,MAAMC,QAAQ,GAAGF,OAAO,CAACG,IAAI;QAE7BX,OAAO,CAACU,QAAQ,CAAC;QACjBR,UAAU,CAACU,OAAO,CAACF,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAExC;QACA,MAAMC,UAAU,GAAG,MAAMtB,GAAG,CAACiB,GAAG,CAAC,oBAAoB,CAAC;QACtD,MAAMM,OAAO,GAAGD,UAAU,CAACH,IAAI;;QAE/B;QACAP,YAAY,CAACW,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,8DAA8D,CAAC;QAC7EnB,OAAO,CAAC,IAAI,CAAC;QACbE,UAAU,CAAC,KAAK,CAAC;QACjBE,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,SAAS;QACNE,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEE,OAAO;MAAEE,SAAS;MAAEE;IAAQ,CAAE;IAAAR,QAAA,EAC9DA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC3B,EAAA,CAxCWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}