{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// contexts/UserContext.js\nimport React, { createContext, useState, useEffect, useCallback, useRef, useContext } from 'react';\nimport api, { setUnauthorizedCallback } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useUserContext = () => {\n  _s();\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUserContext must be used within a UserProvider');\n  }\n  return context;\n};\n_s(useUserContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(() => {\n    const storedUserName = localStorage.getItem('userName');\n    const storedProfilePictureUrl = localStorage.getItem('profilePicture');\n    return storedUserName ? {\n      name: storedUserName,\n      profile_picture_url: storedProfilePictureUrl || null\n    } : null;\n  });\n  const [isAdmin, setIsAdmin] = useState(() => localStorage.getItem('isAdmin') === 'true');\n  const [hasDevice, setHasDevice] = useState(false);\n  const [loadingDevice, setLoadingDevice] = useState(false);\n  const [loadingInitial, setLoadingInitial] = useState(true);\n  const [error, setError] = useState(null);\n  const isInitialCheckDone = useRef(false);\n  const checkDeviceStatus = useCallback(async currentUser => {\n    if (!currentUser || loadingDevice) {\n      if (!currentUser) console.log('Context: checkDeviceStatus skipped - user is null.');\n      if (loadingDevice) console.log('Context: checkDeviceStatus skipped - already checking.');\n      setHasDevice(false);\n      return;\n    }\n    setLoadingDevice(true);\n    console.log('Context: Performing device status check...');\n    try {\n      const devicesRes = await api.get('/user-iot-devices');\n      const userHasDevice = devicesRes.data && devicesRes.data.length > 0;\n      setHasDevice(userHasDevice);\n      console.log(`Context: Device check successful. Has device: ${userHasDevice}.`);\n    } catch (err) {\n      var _err$response;\n      console.error('Context: Failed to fetch user devices:', err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 401) {\n        setHasDevice(false);\n      }\n    } finally {\n      setLoadingDevice(false);\n    }\n  }, [loadingDevice]);\n  useEffect(() => {\n    if (isInitialCheckDone.current) {\n      console.log('Context: Initial check already done, skipping useEffect.');\n      return;\n    }\n    isInitialCheckDone.current = true;\n    console.log('Context: Starting initial check useEffect.');\n    const storedUserName = localStorage.getItem('userName');\n    const storedProfilePictureUrl = localStorage.getItem('profilePicture');\n    const initialUser = storedUserName ? {\n      name: storedUserName,\n      profile_picture_url: storedProfilePictureUrl || null\n    } : null;\n    setUser(initialUser);\n    setIsAdmin(localStorage.getItem('isAdmin') === 'true');\n    if (initialUser) {\n      checkDeviceStatus(initialUser);\n    } else {\n      setHasDevice(false);\n    }\n    setLoadingInitial(false);\n    console.log('Context: Initial check useEffect finished.');\n  }, [checkDeviceStatus]);\n  const logoutUser = useCallback(async () => {\n    console.log('Context: logoutUser called.');\n    try {\n      console.log('Context: Attempting backend /auth/logout call (optional)...');\n      // await api.post('/auth/logout');\n      console.log('Context: Backend logout call finished (or skipped).');\n    } catch (err) {\n      console.error('Context: Failed to call backend logout API:', err);\n    } finally {\n      console.log('Context: Performing local logout cleanup.');\n      setUser(null);\n      setIsAdmin(false);\n      setHasDevice(false);\n      setLoadingDevice(false);\n      localStorage.removeItem('userName');\n      localStorage.removeItem('isAdmin');\n      localStorage.removeItem('profilePicture');\n    }\n  }, []);\n  useEffect(() => {\n    console.log('Context: Setting API unauthorized callback.');\n    setUnauthorizedCallback(logoutUser);\n    return () => {\n      console.log('Context: Clearing API unauthorized callback.');\n      setUnauthorizedCallback(null);\n    };\n  }, [logoutUser]);\n  const handleLoginSuccess = useCallback(userDataFromLogin => {\n    console.log('Context: handleLoginSuccess called.');\n    setUser(userDataFromLogin);\n    setIsAdmin(userDataFromLogin.is_admin || false);\n    setError(null);\n    localStorage.setItem('userName', userDataFromLogin.name || \"\");\n    localStorage.setItem('isAdmin', userDataFromLogin.is_admin ? 'true' : 'false');\n    if (userDataFromLogin.profile_picture_url) {\n      localStorage.setItem('profilePicture', userDataFromLogin.profile_picture_url);\n      console.log('Context: profilePicture saved to localStorage:', userDataFromLogin.profile_picture_url);\n    } else {\n      localStorage.removeItem('profilePicture');\n      console.log('Context: No profile picture URL received, removed from localStorage.');\n    }\n    checkDeviceStatus(userDataFromLogin);\n  }, [checkDeviceStatus]);\n  const contextValue = {\n    user,\n    isAdmin,\n    hasDevice,\n    loadingInitial,\n    loadingDevice,\n    error,\n    logoutUser,\n    handleLoginSuccess,\n    checkDeviceStatus\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s2(UserProvider, \"wkNX0zlsFx8yHvJvRVscoCOJepo=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useRef","useContext","api","setUnauthorizedCallback","jsxDEV","_jsxDEV","useUserContext","_s","context","UserContext","undefined","Error","UserProvider","children","_s2","user","setUser","storedUserName","localStorage","getItem","storedProfilePictureUrl","name","profile_picture_url","isAdmin","setIsAdmin","hasDevice","setHasDevice","loadingDevice","setLoadingDevice","loadingInitial","setLoadingInitial","error","setError","isInitialCheckDone","checkDeviceStatus","currentUser","console","log","devicesRes","get","userHasDevice","data","length","err","_err$response","response","status","current","initialUser","logoutUser","removeItem","handleLoginSuccess","userDataFromLogin","is_admin","setItem","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/contexts/UserContext.js"],"sourcesContent":["// contexts/UserContext.js\r\nimport React, { createContext, useState, useEffect, useCallback, useRef, useContext } from 'react';\r\nimport api, { setUnauthorizedCallback } from '../utils/api';\r\n\r\nexport const useUserContext = () => {\r\n    const context = useContext(UserContext);\r\n    if (context === undefined) {\r\n        throw new Error('useUserContext must be used within a UserProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState(() => {\r\n        const storedUserName = localStorage.getItem('userName');\r\n        const storedProfilePictureUrl = localStorage.getItem('profilePicture');\r\n        return storedUserName ? {\r\n            name: storedUserName,\r\n            profile_picture_url: storedProfilePictureUrl || null,\r\n        } : null;\r\n    });\r\n    const [isAdmin, setIsAdmin] = useState(() => localStorage.getItem('isAdmin') === 'true');\r\n    const [hasDevice, setHasDevice] = useState(false);\r\n    const [loadingDevice, setLoadingDevice] = useState(false);\r\n    const [loadingInitial, setLoadingInitial] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const isInitialCheckDone = useRef(false);\r\n\r\n    const checkDeviceStatus = useCallback(async (currentUser) => {\r\n        if (!currentUser || loadingDevice) {\r\n            if (!currentUser) console.log('Context: checkDeviceStatus skipped - user is null.');\r\n            if (loadingDevice) console.log('Context: checkDeviceStatus skipped - already checking.');\r\n            setHasDevice(false);\r\n            return;\r\n        }\r\n\r\n        setLoadingDevice(true);\r\n        console.log('Context: Performing device status check...');\r\n        try {\r\n            const devicesRes = await api.get('/user-iot-devices');\r\n            const userHasDevice = devicesRes.data && devicesRes.data.length > 0;\r\n            setHasDevice(userHasDevice);\r\n            console.log(`Context: Device check successful. Has device: ${userHasDevice}.`);\r\n        } catch (err) {\r\n            console.error('Context: Failed to fetch user devices:', err);\r\n            if (err.response?.status !== 401) {\r\n                setHasDevice(false);\r\n            }\r\n        } finally {\r\n            setLoadingDevice(false);\r\n        }\r\n    }, [loadingDevice]);\r\n\r\n    useEffect(() => {\r\n        if (isInitialCheckDone.current) {\r\n            console.log('Context: Initial check already done, skipping useEffect.');\r\n            return;\r\n        }\r\n\r\n        isInitialCheckDone.current = true;\r\n        console.log('Context: Starting initial check useEffect.');\r\n\r\n        const storedUserName = localStorage.getItem('userName');\r\n        const storedProfilePictureUrl = localStorage.getItem('profilePicture');\r\n        const initialUser = storedUserName ? {\r\n            name: storedUserName,\r\n            profile_picture_url: storedProfilePictureUrl || null,\r\n        } : null;\r\n\r\n        setUser(initialUser);\r\n        setIsAdmin(localStorage.getItem('isAdmin') === 'true');\r\n\r\n        if (initialUser) {\r\n            checkDeviceStatus(initialUser);\r\n        } else {\r\n            setHasDevice(false);\r\n        }\r\n\r\n        setLoadingInitial(false);\r\n        console.log('Context: Initial check useEffect finished.');\r\n\r\n    }, [checkDeviceStatus]);\r\n\r\n    const logoutUser = useCallback(async () => {\r\n        console.log('Context: logoutUser called.');\r\n        try {\r\n            console.log('Context: Attempting backend /auth/logout call (optional)...');\r\n            // await api.post('/auth/logout');\r\n            console.log('Context: Backend logout call finished (or skipped).');\r\n        } catch (err) {\r\n            console.error('Context: Failed to call backend logout API:', err);\r\n        } finally {\r\n            console.log('Context: Performing local logout cleanup.');\r\n            setUser(null);\r\n            setIsAdmin(false);\r\n            setHasDevice(false);\r\n            setLoadingDevice(false);\r\n            localStorage.removeItem('userName');\r\n            localStorage.removeItem('isAdmin');\r\n            localStorage.removeItem('profilePicture');\r\n\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('Context: Setting API unauthorized callback.');\r\n        setUnauthorizedCallback(logoutUser);\r\n\r\n        return () => {\r\n            console.log('Context: Clearing API unauthorized callback.');\r\n            setUnauthorizedCallback(null);\r\n        };\r\n    }, [logoutUser]);\r\n\r\n\r\n    const handleLoginSuccess = useCallback((userDataFromLogin) => {\r\n        console.log('Context: handleLoginSuccess called.');\r\n\r\n        setUser(userDataFromLogin);\r\n\r\n        setIsAdmin(userDataFromLogin.is_admin || false);\r\n        setError(null);\r\n\r\n        localStorage.setItem('userName', userDataFromLogin.name || \"\");\r\n        localStorage.setItem('isAdmin', userDataFromLogin.is_admin ? 'true' : 'false');\r\n        if (userDataFromLogin.profile_picture_url) {\r\n            localStorage.setItem('profilePicture', userDataFromLogin.profile_picture_url);\r\n            console.log('Context: profilePicture saved to localStorage:', userDataFromLogin.profile_picture_url);\r\n        } else {\r\n            localStorage.removeItem('profilePicture');\r\n            console.log('Context: No profile picture URL received, removed from localStorage.');\r\n        }\r\n\r\n\r\n        checkDeviceStatus(userDataFromLogin);\r\n\r\n    }, [checkDeviceStatus]);\r\n\r\n\r\n    const contextValue = {\r\n        user,\r\n        isAdmin,\r\n        hasDevice,\r\n        loadingInitial,\r\n        loadingDevice,\r\n        error,\r\n        logoutUser,\r\n        handleLoginSuccess,\r\n        checkDeviceStatus,\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={contextValue}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}