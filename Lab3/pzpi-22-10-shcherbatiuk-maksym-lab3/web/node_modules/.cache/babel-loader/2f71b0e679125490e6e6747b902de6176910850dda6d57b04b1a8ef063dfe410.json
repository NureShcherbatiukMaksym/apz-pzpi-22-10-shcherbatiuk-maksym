{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\pages\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport AuthForm from '../components/AuthForm';\nimport api from '../utils/api';\nimport { useNavigate } from 'react-router-dom';\nimport { signInWithPopup } from \"firebase/auth\";\nimport { auth, googleProvider } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const navigate = useNavigate();\n  const handleRegister = async (email, password) => {\n    try {\n      const res = await api.post('/auth/register/password', {\n        email,\n        password\n      });\n      console.log('Register success:', res.data);\n      const {\n        user\n      } = res.data;\n      localStorage.setItem('userName', user.name);\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert('Помилка реєстрації: ' + ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n    }\n  };\n  const handleGoogleRegister = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider); // <-- ось тут виправлення\n      const token = await result.user.getIdToken();\n      const res = await api.post('/auth/login/google', {\n        token\n      }, {\n        withCredentials: true\n      });\n      console.log('Google login success:', res.data);\n      const {\n        user\n      } = res.data;\n      localStorage.setItem('userName', user.name);\n      navigate('/home');\n    } catch (error) {\n      console.error('Google login error:', error);\n      alert('Помилка авторизації через Google');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"login\",\n    onSubmit: handleRegister(),\n    onGoogleLogin: handleGoogleRegister()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","AuthForm","api","useNavigate","signInWithPopup","auth","googleProvider","jsxDEV","_jsxDEV","RegisterPage","_s","navigate","handleRegister","email","password","res","post","console","log","data","user","localStorage","setItem","name","err","_err$response","_err$response$data","alert","response","message","handleGoogleRegister","result","token","getIdToken","withCredentials","error","type","onSubmit","onGoogleLogin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/pages/RegisterPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport AuthForm from '../components/AuthForm';\r\nimport api from '../utils/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {signInWithPopup} from \"firebase/auth\";\r\nimport {auth, googleProvider} from \"../firebase\";\r\n\r\nexport default function RegisterPage() {\r\n    const navigate = useNavigate();\r\n\r\n    const handleRegister = async (email, password) => {\r\n        try {\r\n            const res = await api.post('/auth/register/password', { email, password });\r\n            console.log('Register success:', res.data);\r\n            const { user } = res.data;\r\n            localStorage.setItem('userName', user.name);\r\n            navigate('/login');\r\n\r\n        } catch (err) {\r\n            alert('Помилка реєстрації: ' + err.response?.data?.message || err.message);\r\n        }\r\n    };\r\n    const handleGoogleRegister = async () => {\r\n        try {\r\n            const result = await signInWithPopup(auth, googleProvider); // <-- ось тут виправлення\r\n            const token = await result.user.getIdToken();\r\n\r\n            const res = await api.post('/auth/login/google', { token }, { withCredentials: true });\r\n            console.log('Google login success:', res.data);\r\n            const { user } = res.data;\r\n            localStorage.setItem('userName', user.name);\r\n            navigate('/home');\r\n        } catch (error) {\r\n            console.error('Google login error:', error);\r\n            alert('Помилка авторизації через Google');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <AuthForm type=\"login\" onSubmit={handleRegister()} onGoogleLogin={handleGoogleRegister()} />\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,GAAG,MAAM,cAAc;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,eAAe,QAAO,eAAe;AAC7C,SAAQC,IAAI,EAAEC,cAAc,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,cAAc,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC9C,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,yBAAyB,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC1EG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAC1C,MAAM;QAAEC;MAAK,CAAC,GAAGL,GAAG,CAACI,IAAI;MACzBE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,IAAI,CAAC;MAC3CZ,QAAQ,CAAC,QAAQ,CAAC;IAEtB,CAAC,CAAC,OAAOa,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACVC,KAAK,CAAC,sBAAsB,KAAAF,aAAA,GAAGD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcN,IAAI,cAAAO,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAIL,GAAG,CAACK,OAAO,CAAC;IAC9E;EACJ,CAAC;EACD,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACA,MAAMC,MAAM,GAAG,MAAM3B,eAAe,CAACC,IAAI,EAAEC,cAAc,CAAC,CAAC,CAAC;MAC5D,MAAM0B,KAAK,GAAG,MAAMD,MAAM,CAACX,IAAI,CAACa,UAAU,CAAC,CAAC;MAE5C,MAAMlB,GAAG,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,oBAAoB,EAAE;QAAEgB;MAAM,CAAC,EAAE;QAAEE,eAAe,EAAE;MAAK,CAAC,CAAC;MACtFjB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAC9C,MAAM;QAAEC;MAAK,CAAC,GAAGL,GAAG,CAACI,IAAI;MACzBE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,IAAI,CAAC;MAC3CZ,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACZlB,OAAO,CAACkB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CR,KAAK,CAAC,kCAAkC,CAAC;IAC7C;EACJ,CAAC;EAGD,oBAEInB,OAAA,CAACP,QAAQ;IAACmC,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAEzB,cAAc,CAAC,CAAE;IAAC0B,aAAa,EAAER,oBAAoB,CAAC;EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpG;AAAChC,EAAA,CApCuBD,YAAY;EAAA,QACfN,WAAW;AAAA;AAAAwC,EAAA,GADRlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}