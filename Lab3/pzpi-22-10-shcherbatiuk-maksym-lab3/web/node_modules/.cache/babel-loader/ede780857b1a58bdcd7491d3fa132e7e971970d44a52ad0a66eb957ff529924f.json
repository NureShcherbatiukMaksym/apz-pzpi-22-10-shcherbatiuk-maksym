{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\LanguageSwitcher.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LanguageSwitcher() {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  // Стан `isEnglish` тепер правильно відображає, чи поточна мова є англійською ('en')\n  const [isEnglish, setIsEnglish] = useState(() => localStorage.getItem('language') !== 'uk'); // За замовчуванням EN, якщо немає в storage або не UK\n\n  const toggleLanguage = () => {\n    // Якщо поточна мова англійська ('en'), перемикаємо на українську ('uk').\n    // Якщо поточна мова не англійська (тобто українська 'uk'), перемикаємо на англійську ('en').\n    const newLang = i18n.language === 'en' ? 'uk' : 'en'; // Використовуємо поточну мову i18n\n\n    i18n.changeLanguage(newLang);\n    localStorage.setItem('language', newLang);\n    // Оновлюємо стан: isEnglish стає true, якщо newLang є 'en'.\n    setIsEnglish(newLang === 'en');\n  };\n  useEffect(() => {\n    const storedLang = localStorage.getItem('language');\n    const initialLang = storedLang || 'en'; // За замовчуванням 'en', якщо немає в storage\n    // Змінюємо мову i18n лише якщо вона відрізняється від поточної\n    if (i18n.language !== initialLang) {\n      i18n.changeLanguage(initialLang);\n    }\n    // Встановлюємо стан isEnglish на основі початкової мови зі storage/за замовчуванням\n    setIsEnglish(initialLang === 'en');\n  }, [i18n]); // i18n потрібен як залежність, оскільки використовується всередині ефекту\n\n  return (\n    /*#__PURE__*/\n    // Цей div є контейнером для кнопки та тексту, вирівнюючи їх по центру\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLanguage\n        // Ширина кнопки (w-12) дає простір для перемикання\n        ,\n        className: \"flex items-center w-12 h-6 bg-gray-300 rounded-full px-1 border border-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-300 ease-in-out\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          // Ширина (w-4) та висота (h-4) кружечка\n          // Transform рухає кружечок. Якщо англійська (isEnglish=true), залишаємо зліва (translate-x-0). Якщо українська (isEnglish=false), рухаємо вправо (translate-x-6).\n          className: `w-4 h-4 bg-white rounded-full shadow-md transform duration-300 ease-in-out ${isEnglish ? 'translate-x-0' : 'translate-x-6'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-center mt-1\",\n        children: [i18n.language.toUpperCase(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(LanguageSwitcher, \"ymVPjbrdqQISHWGq6xqoE4F7OA4=\", false, function () {\n  return [useTranslation];\n});\n_c = LanguageSwitcher;\nvar _c;\n$RefreshReg$(_c, \"LanguageSwitcher\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","jsxDEV","_jsxDEV","LanguageSwitcher","_s","i18n","isEnglish","setIsEnglish","localStorage","getItem","toggleLanguage","newLang","language","changeLanguage","setItem","storedLang","initialLang","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/LanguageSwitcher.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function LanguageSwitcher() {\r\n    const { i18n } = useTranslation();\r\n    // Стан `isEnglish` тепер правильно відображає, чи поточна мова є англійською ('en')\r\n    const [isEnglish, setIsEnglish] = useState(() => localStorage.getItem('language') !== 'uk'); // За замовчуванням EN, якщо немає в storage або не UK\r\n\r\n    const toggleLanguage = () => {\r\n        // Якщо поточна мова англійська ('en'), перемикаємо на українську ('uk').\r\n        // Якщо поточна мова не англійська (тобто українська 'uk'), перемикаємо на англійську ('en').\r\n        const newLang = i18n.language === 'en' ? 'uk' : 'en'; // Використовуємо поточну мову i18n\r\n\r\n        i18n.changeLanguage(newLang);\r\n        localStorage.setItem('language', newLang);\r\n        // Оновлюємо стан: isEnglish стає true, якщо newLang є 'en'.\r\n        setIsEnglish(newLang === 'en');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedLang = localStorage.getItem('language');\r\n        const initialLang = storedLang || 'en'; // За замовчуванням 'en', якщо немає в storage\r\n        // Змінюємо мову i18n лише якщо вона відрізняється від поточної\r\n        if (i18n.language !== initialLang) {\r\n            i18n.changeLanguage(initialLang);\r\n        }\r\n        // Встановлюємо стан isEnglish на основі початкової мови зі storage/за замовчуванням\r\n        setIsEnglish(initialLang === 'en');\r\n    }, [i18n]); // i18n потрібен як залежність, оскільки використовується всередині ефекту\r\n\r\n\r\n    return (\r\n        // Цей div є контейнером для кнопки та тексту, вирівнюючи їх по центру\r\n        <div className=\"flex flex-col items-center\">\r\n            <button\r\n                onClick={toggleLanguage}\r\n                // Ширина кнопки (w-12) дає простір для перемикання\r\n                className=\"flex items-center w-12 h-6 bg-gray-300 rounded-full px-1 border border-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-300 ease-in-out\"\r\n            >\r\n                <span\r\n                    // Ширина (w-4) та висота (h-4) кружечка\r\n                    // Transform рухає кружечок. Якщо англійська (isEnglish=true), залишаємо зліва (translate-x-0). Якщо українська (isEnglish=false), рухаємо вправо (translate-x-6).\r\n                    className={`w-4 h-4 bg-white rounded-full shadow-md transform duration-300 ease-in-out ${isEnglish ? 'translate-x-0' : 'translate-x-6'}`}\r\n                ></span>\r\n            </button>\r\n            <div className=\"text-xs text-center mt-1\">\r\n                {/* Відображаємо поточне скорочення мови великими літерами */}\r\n                {i18n.language.toUpperCase()} {/* Використовуємо i18n.language безпосередньо */}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAK,CAAC,GAAGL,cAAc,CAAC,CAAC;EACjC;EACA,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,MAAMU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;;EAE7F,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB;IACA;IACA,MAAMC,OAAO,GAAGN,IAAI,CAACO,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;;IAEtDP,IAAI,CAACQ,cAAc,CAACF,OAAO,CAAC;IAC5BH,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEH,OAAO,CAAC;IACzC;IACAJ,YAAY,CAACI,OAAO,KAAK,IAAI,CAAC;EAClC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAGP,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,MAAMO,WAAW,GAAGD,UAAU,IAAI,IAAI,CAAC,CAAC;IACxC;IACA,IAAIV,IAAI,CAACO,QAAQ,KAAKI,WAAW,EAAE;MAC/BX,IAAI,CAACQ,cAAc,CAACG,WAAW,CAAC;IACpC;IACA;IACAT,YAAY,CAACS,WAAW,KAAK,IAAI,CAAC;EACtC,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC,CAAC,CAAC;;EAGZ;IAAA;IACI;IACAH,OAAA;MAAKe,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACvChB,OAAA;QACIiB,OAAO,EAAET;QACT;QAAA;QACAO,SAAS,EAAC,gLAAgL;QAAAC,QAAA,eAE1LhB,OAAA;UACI;UACA;UACAe,SAAS,EAAE,8EAA8EX,SAAS,GAAG,eAAe,GAAG,eAAe;QAAG;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACTrB,OAAA;QAAKe,SAAS,EAAC,0BAA0B;QAAAC,QAAA,GAEpCb,IAAI,CAACO,QAAQ,CAACY,WAAW,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEd;AAACnB,EAAA,CAhDuBD,gBAAgB;EAAA,QACnBH,cAAc;AAAA;AAAAyB,EAAA,GADXtB,gBAAgB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}