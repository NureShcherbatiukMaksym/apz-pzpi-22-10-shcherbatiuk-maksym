{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\DashboardContent.jsx\",\n  _s = $RefreshSig$();\n// src/components/DashboardContent.js\nimport React, { useEffect, useState } from 'react';\n// useNavigate можливо не потрібен, якщо логіка редагування теж буде передаватися пропсом\n// import { useNavigate } from \"react-router-dom\";\nimport api from '../utils/api';\nimport { useFieldContext } from '../contexts/FieldContext';\n\n// Приймаємо пропси onFieldSelect та selectedFieldId\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContent = ({\n  onFieldSelect,\n  selectedFieldId: propSelectedFieldId\n}) => {\n  _s();\n  // ... ваш існуючий код та useState ...\n\n  const handleFieldClick = fieldId => {\n    console.log('DashboardContent: Field clicked with ID:', fieldId); // Лог спрацював\n    if (onFieldSelect) {\n      // Ця перевірка зараз видає false\n      console.log('DashboardContent: Calling onFieldSelect prop.');\n      onFieldSelect(fieldId);\n    } else {\n      console.warn('DashboardContent: onFieldSelect prop is NOT provided.'); // Ось цей лог ви бачите\n    }\n  };\n  const {\n    filter,\n    sortBy,\n    sortOrder,\n    searchTerm\n  } = useFieldContext();\n  const [fields, setFields] = useState([]);\n  // const navigate = useNavigate(); // Видаляємо useNavigate, якщо він не використовується для кнопки редагування\n\n  useEffect(() => {\n    api.get('/fields').then(response => setFields(response.data)).catch(error => console.error('Error fetching fields:', error));\n  }, [sortBy, sortOrder, filter]);\n  const searchedFields = fields.filter(field => field.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const filteredFields = searchedFields.filter(field => {\n    if (filter === \"all\") return true;\n    if (filter === \"active\") return field.selected === true; // Припускаємо поле 'selected'\n    if (filter === \"inactive\") return field.selected === false;\n    return true;\n  });\n\n  // Сортування (без змін)\n  const sortedFields = [...filteredFields].sort((a, b) => {\n    if (sortBy === \"name\") {\n      return sortOrder === \"asc\" ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);\n    }\n    if (sortBy === \"area\") {\n      return sortOrder === \"asc\" ? a.area - b.area : b.area - a.area;\n    }\n    if (sortBy === \"created_at\") {\n      return sortOrder === \"asc\" ? new Date(a.created_at) - new Date(b.created_at) : new Date(b.created_at) - new Date(a.created_at);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"dash-content\",\n    className: \"bg-gray-200 py-6 lg:py-0 w-full lg:max-w-sm flex flex-wrap content-start overflow-y-auto max-h-screen\",\n    children: [fields.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center w-full text-gray-500\",\n      children: \"\\u041F\\u043E\\u043B\\u044F \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0456\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), sortedFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 lg:w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        // onClick викликає handleFieldClick\n        onClick: () => handleFieldClick(field.id)\n        // Використовуємо propSelectedFieldId для виділення (на HomePage він буде null)\n        ,\n        className: `cursor-pointer border-2 border-gray-400 border-dashed hover:border-transparent hover:bg-white hover:shadow-xl rounded p-6 m-2 md:mx-10 md:my-6 relative transition duration-200\n                           ${field.id === propSelectedFieldId ? 'border-indigo-500 bg-white shadow-xl' : ''} `,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation(); // блокуємо основний клік на полі\n            // Якщо логіка редагування завжди однакова (навігація), можна залишити useNavigate тут або передавати navigate як пропс\n            // Якщо логіка редагування теж залежить від сторінки, її теж треба передавати пропсом\n            console.log(`Edit field ${field.id} clicked`); // Лог\n            // navigate(`/field/${field.id}/edit`); // Приклад навігації для редагування\n          },\n          className: \"absolute top-3 right-3 text-gray-500 hover:text-indigo-600\",\n          title: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u0442\\u0438 \\u043F\\u043E\\u043B\\u0435\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-edit text-xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rounded-full p-3 bg-gray-300\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-seedling fa-fw fa-inverse text-indigo-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-2xl\",\n              children: field.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"font-bold text-gray-500\",\n              children: field.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardContent, \"jtnmqYLQ/IVLip0nXDW4Q6ZZrOs=\", false, function () {\n  return [useFieldContext];\n});\n_c = DashboardContent;\nexport default DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["React","useEffect","useState","api","useFieldContext","jsxDEV","_jsxDEV","DashboardContent","onFieldSelect","selectedFieldId","propSelectedFieldId","_s","handleFieldClick","fieldId","console","log","warn","filter","sortBy","sortOrder","searchTerm","fields","setFields","get","then","response","data","catch","error","searchedFields","field","name","toLowerCase","includes","filteredFields","selected","sortedFields","sort","a","b","localeCompare","area","Date","created_at","id","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","e","stopPropagation","title","description","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/DashboardContent.jsx"],"sourcesContent":["// src/components/DashboardContent.js\r\nimport React, { useEffect, useState } from 'react';\r\n// useNavigate можливо не потрібен, якщо логіка редагування теж буде передаватися пропсом\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport api from '../utils/api';\r\nimport { useFieldContext } from '../contexts/FieldContext';\r\n\r\n// Приймаємо пропси onFieldSelect та selectedFieldId\r\nconst DashboardContent = ({ onFieldSelect, selectedFieldId: propSelectedFieldId }) => {\r\n    // ... ваш існуючий код та useState ...\r\n\r\n    const handleFieldClick = (fieldId) => {\r\n        console.log('DashboardContent: Field clicked with ID:', fieldId); // Лог спрацював\r\n        if (onFieldSelect) { // Ця перевірка зараз видає false\r\n            console.log('DashboardContent: Calling onFieldSelect prop.');\r\n            onFieldSelect(fieldId);\r\n        } else {\r\n            console.warn('DashboardContent: onFieldSelect prop is NOT provided.'); // Ось цей лог ви бачите\r\n        }\r\n    };\r\n    const { filter, sortBy, sortOrder, searchTerm } = useFieldContext();\r\n\r\n    const [fields, setFields] = useState([]);\r\n    // const navigate = useNavigate(); // Видаляємо useNavigate, якщо він не використовується для кнопки редагування\r\n\r\n    useEffect(() => {\r\n        api.get('/fields')\r\n            .then(response => setFields(response.data))\r\n            .catch(error => console.error('Error fetching fields:', error));\r\n    }, [sortBy, sortOrder, filter]);\r\n\r\n    const searchedFields = fields.filter(field =>\r\n        field.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    const filteredFields = searchedFields.filter(field => {\r\n        if (filter === \"all\") return true;\r\n        if (filter === \"active\") return field.selected === true; // Припускаємо поле 'selected'\r\n        if (filter === \"inactive\") return field.selected === false;\r\n        return true;\r\n    });\r\n\r\n    // Сортування (без змін)\r\n    const sortedFields = [...filteredFields].sort((a, b) => {\r\n        if (sortBy === \"name\") {\r\n            return sortOrder === \"asc\" ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);\r\n        }\r\n        if (sortBy === \"area\") {\r\n            return sortOrder === \"asc\" ? a.area - b.area : b.area - a.area;\r\n        }\r\n        if (sortBy === \"created_at\") {\r\n            return sortOrder === \"asc\"\r\n                ? new Date(a.created_at) - new Date(b.created_at)\r\n                : new Date(b.created_at) - new Date(a.created_at);\r\n        }\r\n        return 0;\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"dash-content\" className=\"bg-gray-200 py-6 lg:py-0 w-full lg:max-w-sm flex flex-wrap content-start overflow-y-auto max-h-screen\">\r\n            {fields.length === 0 && (\r\n                <p className=\"text-center w-full text-gray-500\">Поля не знайдені</p>\r\n            )}\r\n            {sortedFields.map(field => (\r\n                <div key={field.id} className=\"w-1/2 lg:w-full\">\r\n                    <div\r\n                        // onClick викликає handleFieldClick\r\n                        onClick={() => handleFieldClick(field.id)}\r\n                        // Використовуємо propSelectedFieldId для виділення (на HomePage він буде null)\r\n                        className={`cursor-pointer border-2 border-gray-400 border-dashed hover:border-transparent hover:bg-white hover:shadow-xl rounded p-6 m-2 md:mx-10 md:my-6 relative transition duration-200\r\n                           ${field.id === propSelectedFieldId ? 'border-indigo-500 bg-white shadow-xl' : ''} `}\r\n                    >\r\n                        {/* Іконка редагування - залишимо для прикладу, припускаючи, що вона завжди веде на /edit */}\r\n                        <button\r\n                            onClick={(e) => {\r\n                                e.stopPropagation(); // блокуємо основний клік на полі\r\n                                // Якщо логіка редагування завжди однакова (навігація), можна залишити useNavigate тут або передавати navigate як пропс\r\n                                // Якщо логіка редагування теж залежить від сторінки, її теж треба передавати пропсом\r\n                                console.log(`Edit field ${field.id} clicked`); // Лог\r\n                                // navigate(`/field/${field.id}/edit`); // Приклад навігації для редагування\r\n                            }}\r\n                            className=\"absolute top-3 right-3 text-gray-500 hover:text-indigo-600\"\r\n                            title=\"Редагувати поле\"\r\n                        >\r\n                            <i className=\"fas fa-edit text-xl\"></i>\r\n                        </button>\r\n\r\n                        {/* Контент поля (без змін) */}\r\n                        <div className=\"flex flex-col items-center\">\r\n                            <div className=\"flex-shrink \">\r\n                                <div className=\"rounded-full p-3 bg-gray-300\">\r\n                                    <i className=\"fa fa-seedling fa-fw fa-inverse text-indigo-500\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex-1 text-center\">\r\n                                <h3 className=\"font-bold text-2xl\">{field.name}</h3>\r\n                                <h5 className=\"font-bold text-gray-500\">{field.description}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}