{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\MapPolygonPicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from \"react\";\nimport { GoogleMap, LoadScript, Polygon } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\"\n};\nconst center = {\n  lat: 48.3794,\n  // Україна, можеш змінити на координати поля\n  lng: 31.1656\n};\nconst MapPolygonPicker = ({\n  onPolygonComplete\n}) => {\n  _s();\n  const [paths, setPaths] = useState([]);\n  const mapRef = useRef(null);\n  const handleClick = useCallback(event => {\n    const newPoint = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    };\n    setPaths(prev => {\n      const newPaths = [...prev, newPoint];\n\n      // Оновлюємо координати\n      if (onPolygonComplete) {\n        onPolygonComplete(newPaths);\n      }\n      return newPaths;\n    });\n  }, [paths, onPolygonComplete]);\n  const handleComplete = () => {\n    if (onPolygonComplete) onPolygonComplete(paths);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyC6-KT4EaMNrVuln5DQ5Xn8e8n4kZwsKMU\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 6,\n        onClick: handleClick,\n        onLoad: map => mapRef.current = map,\n        children: paths.length > 0 && /*#__PURE__*/_jsxDEV(Polygon, {\n          path: paths,\n          options: {\n            fillColor: \"#00FF00\",\n            fillOpacity: 0.3,\n            strokeColor: \"#00AA00\",\n            strokeOpacity: 1,\n            strokeWeight: 2,\n            editable: true,\n            draggable: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-2 bg-green-500 text-white px-4 py-2 rounded\",\n      onClick: handleComplete,\n      children: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0438 \\u043F\\u043E\\u043B\\u0456\\u0433\\u043E\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPolygonPicker, \"uLgtkStNlmMEZd893+b6Xs5hU40=\");\n_c = MapPolygonPicker;\nexport default MapPolygonPicker;\nvar _c;\n$RefreshReg$(_c, \"MapPolygonPicker\");","map":{"version":3,"names":["React","useState","useCallback","useRef","GoogleMap","LoadScript","Polygon","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapPolygonPicker","onPolygonComplete","_s","paths","setPaths","mapRef","handleClick","event","newPoint","latLng","prev","newPaths","handleComplete","children","googleMapsApiKey","mapContainerStyle","zoom","onClick","onLoad","map","current","length","path","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","editable","draggable","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/MapPolygonPicker.jsx"],"sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\r\nimport { GoogleMap, LoadScript, Polygon } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n    width: \"100%\",\r\n    height: \"500px\",\r\n};\r\n\r\nconst center = {\r\n    lat: 48.3794, // Україна, можеш змінити на координати поля\r\n    lng: 31.1656,\r\n};\r\n\r\nconst MapPolygonPicker = ({ onPolygonComplete }) => {\r\n    const [paths, setPaths] = useState([]);\r\n    const mapRef = useRef(null);\r\n\r\n    const handleClick = useCallback(\r\n        (event) => {\r\n            const newPoint = {\r\n                lat: event.latLng.lat(),\r\n                lng: event.latLng.lng(),\r\n            };\r\n\r\n            setPaths((prev) => {\r\n                const newPaths = [...prev, newPoint];\r\n\r\n                // Оновлюємо координати\r\n                if (onPolygonComplete) {\r\n                    onPolygonComplete(newPaths);\r\n                }\r\n\r\n                return newPaths;\r\n            });\r\n        },\r\n        [paths, onPolygonComplete]\r\n    );\r\n\r\n    const handleComplete = () => {\r\n        if (onPolygonComplete) onPolygonComplete(paths);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC6-KT4EaMNrVuln5DQ5Xn8e8n4kZwsKMU\">\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={6}\r\n                    onClick={handleClick}\r\n                    onLoad={(map) => (mapRef.current = map)}\r\n                >\r\n                    {paths.length > 0 && (\r\n                        <Polygon\r\n                            path={paths}\r\n                            options={{\r\n                                fillColor: \"#00FF00\",\r\n                                fillOpacity: 0.3,\r\n                                strokeColor: \"#00AA00\",\r\n                                strokeOpacity: 1,\r\n                                strokeWeight: 2,\r\n                                editable: true,\r\n                                draggable: false,\r\n                            }}\r\n                        />\r\n                    )}\r\n                </GoogleMap>\r\n            </LoadScript>\r\n\r\n            {/* Кнопка підтвердження */}\r\n            <button className=\"mt-2 bg-green-500 text-white px-4 py-2 rounded\" onClick={handleComplete}>\r\n                Підтвердити полігон\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPolygonPicker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAC5D,SAASC,SAAS,EAAEC,UAAU,EAAEC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,MAAM,GAAG;EACXC,GAAG,EAAE,OAAO;EAAE;EACdC,GAAG,EAAE;AACT,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMmB,MAAM,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAMkB,WAAW,GAAGnB,WAAW,CAC1BoB,KAAK,IAAK;IACP,MAAMC,QAAQ,GAAG;MACbV,GAAG,EAAES,KAAK,CAACE,MAAM,CAACX,GAAG,CAAC,CAAC;MACvBC,GAAG,EAAEQ,KAAK,CAACE,MAAM,CAACV,GAAG,CAAC;IAC1B,CAAC;IAEDK,QAAQ,CAAEM,IAAI,IAAK;MACf,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,EAAEF,QAAQ,CAAC;;MAEpC;MACA,IAAIP,iBAAiB,EAAE;QACnBA,iBAAiB,CAACU,QAAQ,CAAC;MAC/B;MAEA,OAAOA,QAAQ;IACnB,CAAC,CAAC;EACN,CAAC,EACD,CAACR,KAAK,EAAEF,iBAAiB,CAC7B,CAAC;EAED,MAAMW,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIX,iBAAiB,EAAEA,iBAAiB,CAACE,KAAK,CAAC;EACnD,CAAC;EAED,oBACIV,OAAA;IAAAoB,QAAA,gBACIpB,OAAA,CAACH,UAAU;MAACwB,gBAAgB,EAAC,yCAAyC;MAAAD,QAAA,eAClEpB,OAAA,CAACJ,SAAS;QACN0B,iBAAiB,EAAErB,cAAe;QAClCG,MAAM,EAAEA,MAAO;QACfmB,IAAI,EAAE,CAAE;QACRC,OAAO,EAAEX,WAAY;QACrBY,MAAM,EAAGC,GAAG,IAAMd,MAAM,CAACe,OAAO,GAAGD,GAAK;QAAAN,QAAA,EAEvCV,KAAK,CAACkB,MAAM,GAAG,CAAC,iBACb5B,OAAA,CAACF,OAAO;UACJ+B,IAAI,EAAEnB,KAAM;UACZoB,OAAO,EAAE;YACLC,SAAS,EAAE,SAAS;YACpBC,WAAW,EAAE,GAAG;YAChBC,WAAW,EAAE,SAAS;YACtBC,aAAa,EAAE,CAAC;YAChBC,YAAY,EAAE,CAAC;YACfC,QAAQ,EAAE,IAAI;YACdC,SAAS,EAAE;UACf;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGbzC,OAAA;MAAQ0C,SAAS,EAAC,gDAAgD;MAAClB,OAAO,EAAEL,cAAe;MAAAC,QAAA,EAAC;IAE5F;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAChC,EAAA,CA9DIF,gBAAgB;AAAAoC,EAAA,GAAhBpC,gBAAgB;AAgEtB,eAAeA,gBAAgB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}