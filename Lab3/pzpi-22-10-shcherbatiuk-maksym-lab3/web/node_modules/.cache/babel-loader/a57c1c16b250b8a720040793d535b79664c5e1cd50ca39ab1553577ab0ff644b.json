{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\contexts\\\\UserContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // для редіректа\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport function UserProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate(); // обов'язково в середині Router\n\n  // Перевірка токена\n  const checkToken = () => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    const token = storedUser === null || storedUser === void 0 ? void 0 : storedUser.token;\n    if (!token) {\n      logout();\n      return false;\n    }\n\n    // Якщо треба — перевірку по серверу теж можна вставити тут\n    // наприклад, фетч-запит для перевірки токена\n    return true;\n  };\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n  const login = userData => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    navigate('/login'); // редірект на логін\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      checkToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(UserProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","navigate","checkToken","storedUser","JSON","parse","localStorage","getItem","token","logout","login","userData","setItem","stringify","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/contexts/UserContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // для редіректа\r\n\r\nexport const UserContext = createContext(null);\r\n\r\nexport function UserProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate(); // обов'язково в середині Router\r\n\r\n    // Перевірка токена\r\n    const checkToken = () => {\r\n        const storedUser = JSON.parse(localStorage.getItem('user'));\r\n        const token = storedUser?.token;\r\n\r\n        if (!token) {\r\n            logout();\r\n            return false;\r\n        }\r\n\r\n        // Якщо треба — перевірку по серверу теж можна вставити тут\r\n        // наприклад, фетч-запит для перевірки токена\r\n        return true;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedUser = JSON.parse(localStorage.getItem('user'));\r\n        if (storedUser) {\r\n            setUser(storedUser);\r\n        }\r\n    }, []);\r\n\r\n    const login = (userData) => {\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        setUser(userData);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n        navigate('/login'); // редірект на логін\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, login, logout, checkToken }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3D,MAAMC,KAAK,GAAGL,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,KAAK;IAE/B,IAAI,CAACA,KAAK,EAAE;MACRC,MAAM,CAAC,CAAC;MACR,OAAO,KAAK;IAChB;;IAEA;IACA;IACA,OAAO,IAAI;EACf,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAIJ,UAAU,EAAE;MACZH,OAAO,CAACG,UAAU,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAIC,QAAQ,IAAK;IACxBL,YAAY,CAACM,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtDX,OAAO,CAACW,QAAQ,CAAC;EACrB,CAAC;EAED,MAAMF,MAAM,GAAGA,CAAA,KAAM;IACjBH,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/Bd,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACIP,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEW,KAAK;MAAED,MAAM;MAAEP;IAAW,CAAE;IAAAL,QAAA,EAC5DA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACtB,EAAA,CA1CeF,YAAY;EAAA,QAEPJ,WAAW;AAAA;AAAA6B,EAAA,GAFhBzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}