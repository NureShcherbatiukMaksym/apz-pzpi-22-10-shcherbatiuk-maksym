{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// pages/LoginPage.js\nimport React, { useState, useContext } from 'react';\nimport AuthForm from '../components/AuthForm';\nimport api from '../utils/api';\nimport { useNavigate } from 'react-router-dom'; // Потрібно для перенаправлення ПІСЛЯ повного успіху\nimport { auth, googleProvider } from '../firebase';\nimport { signInWithPopup } from 'firebase/auth';\nimport { UserContext } from '../contexts/UserContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const handleLogin = async (email, password) => {\n    try {\n      const res = await api.post('/auth/login/password', {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      console.log('Login success:', res.data);\n      const {\n        user\n      } = res.data;\n      localStorage.setItem('userName', user.name);\n      localStorage.setItem('isAdmin', user.is_admin); // зберігаємо роль\n\n      navigate('/home');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert('Помилка входу: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    }\n  };\n  const handleGoogleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      const token = await result.user.getIdToken();\n      const res = await api.post('/auth/login/google', {\n        token\n      }, {\n        withCredentials: true\n      });\n      console.log('Google login success:', res.data);\n      const {\n        user\n      } = res.data;\n      localStorage.setItem('userName', user.name);\n      localStorage.setItem('isAdmin', user.is_admin); // зберігаємо роль\n\n      navigate('/home');\n    } catch (error) {\n      console.error('Google login error:', error);\n      alert('Помилка авторизації через Google');\n    }\n  };\n\n  // Рендеримо форму логіну тільки якщо користувач null (не авторизований)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthForm, {\n      type: \"login\",\n      onSubmit: handleLogin,\n      onGoogleLogin: handleGoogleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","AuthForm","api","useNavigate","auth","googleProvider","signInWithPopup","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","navigate","handleLogin","email","password","res","post","withCredentials","console","log","data","user","localStorage","setItem","name","is_admin","err","_err$response","_err$response$data","alert","response","message","handleGoogleLogin","result","token","getIdToken","error","children","type","onSubmit","onGoogleLogin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/pages/LoginPage.jsx"],"sourcesContent":["// pages/LoginPage.js\r\nimport React, { useState, useContext } from 'react';\r\nimport AuthForm from '../components/AuthForm';\r\nimport api from '../utils/api';\r\nimport { useNavigate } from 'react-router-dom'; // Потрібно для перенаправлення ПІСЛЯ повного успіху\r\nimport { auth, googleProvider } from '../firebase';\r\nimport { signInWithPopup } from 'firebase/auth';\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nexport default function LoginPage() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n\r\n    const handleLogin = async (email, password) => {\r\n\r\n        try {\r\n\r\n            const res = await api.post('/auth/login/password', { email, password }, {\r\n\r\n                withCredentials: true\r\n\r\n            });\r\n\r\n            console.log('Login success:', res.data);\r\n\r\n            const { user } = res.data;\r\n\r\n\r\n\r\n            localStorage.setItem('userName', user.name);\r\n\r\n            localStorage.setItem('isAdmin', user.is_admin); // зберігаємо роль\r\n\r\n            navigate('/home');\r\n\r\n        } catch (err) {\r\n\r\n            alert('Помилка входу: ' + (err.response?.data?.message || err.message));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const handleGoogleLogin = async () => {\r\n\r\n        try {\r\n\r\n            const result = await signInWithPopup(auth, googleProvider);\r\n\r\n            const token = await result.user.getIdToken();\r\n\r\n\r\n\r\n            const res = await api.post('/auth/login/google', { token }, { withCredentials: true });\r\n\r\n            console.log('Google login success:', res.data);\r\n\r\n            const { user } = res.data;\r\n\r\n\r\n\r\n            localStorage.setItem('userName', user.name);\r\n\r\n            localStorage.setItem('isAdmin', user.is_admin); // зберігаємо роль\r\n\r\n            navigate('/home');\r\n\r\n        } catch (error) {\r\n\r\n            console.error('Google login error:', error);\r\n\r\n            alert('Помилка авторизації через Google');\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    // Рендеримо форму логіну тільки якщо користувач null (не авторизований)\r\n    return (\r\n        <>\r\n\r\n            <AuthForm\r\n                type=\"login\"\r\n                onSubmit={handleLogin}\r\n                onGoogleLogin={handleGoogleLogin}\r\n\r\n            />\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}