{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\MapPolygonPicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { GoogleMap, Polygon } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst center = {\n  lat: 48.3794,\n  lng: 31.1656\n};\nconst MapPolygonPicker = ({\n  onPolygonComplete,\n  setManualCoordsFromMap\n}) => {\n  _s();\n  const [paths, setPaths] = useState([]);\n  const mapRef = useRef(null);\n  const polygonRef = useRef(null);\n  const handleClick = useCallback(event => {\n    const newPoint = {\n      lat: parseFloat(event.latLng.lat().toFixed(6)),\n      lng: parseFloat(event.latLng.lng().toFixed(6))\n    };\n    setPaths(prev => [...prev, newPoint]);\n  }, []);\n\n  // Оновлюємо текст координат при зміні точок\n  const updateCoordsText = useCallback(points => {\n    const coordsText = points.map(point => `[${point.lat}, ${point.lng}]`).join(\",\\n\");\n    setManualCoordsFromMap === null || setManualCoordsFromMap === void 0 ? void 0 : setManualCoordsFromMap(coordsText);\n  }, [setManualCoordsFromMap]);\n\n  // Стежимо за змінами `paths`\n  useEffect(() => {\n    if (paths.length > 0) {\n      updateCoordsText(paths);\n    }\n  }, [paths, updateCoordsText]);\n\n  // Ця функція спрацьовує після редагування полігону\n  const onEdit = () => {\n    if (polygonRef.current) {\n      const nextPath = polygonRef.current.getPath().getArray().map(latLng => ({\n        lat: parseFloat(latLng.lat().toFixed(6)),\n        lng: parseFloat(latLng.lng().toFixed(6))\n      }));\n      setPaths(nextPath);\n    }\n  };\n  const handleComplete = () => {\n    if (paths.length < 3) {\n      alert(\"Позначте хоча б три точки, щоб утворити полігон\");\n      return;\n    }\n    const simplified = paths.map(p => [p.lat, p.lng]);\n    onPolygonComplete === null || onPolygonComplete === void 0 ? void 0 : onPolygonComplete(simplified);\n  };\n  const handleReset = () => {\n    setPaths([]);\n    setManualCoordsFromMap === null || setManualCoordsFromMap === void 0 ? void 0 : setManualCoordsFromMap(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full relative\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 6,\n      onClick: handleClick,\n      onLoad: map => mapRef.current = map,\n      children: paths.length > 0 && /*#__PURE__*/_jsxDEV(Polygon, {\n        path: paths,\n        options: {\n          fillColor: \"#00FF00\",\n          fillOpacity: 0.3,\n          strokeColor: \"#00AA00\",\n          strokeOpacity: 1,\n          strokeWeight: 2,\n          editable: true,\n          draggable: false\n        },\n        onLoad: polygon => polygonRef.current = polygon,\n        onMouseUp: onEdit,\n        onDragEnd: onEdit,\n        onMouseOut: onEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-2 right-2 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 text-white px-3 py-1 rounded text-sm shadow-md\",\n        onClick: handleComplete,\n        children: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-red-500 text-white px-3 py-1 rounded text-sm shadow-md\",\n        onClick: handleReset,\n        children: \"\\u0421\\u043A\\u0438\\u043D\\u0443\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPolygonPicker, \"GAwHKjviU9oNBlxqjo/wwgXyimg=\");\n_c = MapPolygonPicker;\nexport default MapPolygonPicker;\nvar _c;\n$RefreshReg$(_c, \"MapPolygonPicker\");","map":{"version":3,"names":["React","useCallback","useState","useRef","useEffect","GoogleMap","Polygon","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapPolygonPicker","onPolygonComplete","setManualCoordsFromMap","_s","paths","setPaths","mapRef","polygonRef","handleClick","event","newPoint","parseFloat","latLng","toFixed","prev","updateCoordsText","points","coordsText","map","point","join","length","onEdit","current","nextPath","getPath","getArray","handleComplete","alert","simplified","p","handleReset","className","children","mapContainerStyle","zoom","onClick","onLoad","path","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","editable","draggable","polygon","onMouseUp","onDragEnd","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/MapPolygonPicker.jsx"],"sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport { GoogleMap, Polygon } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n};\r\n\r\nconst center = {\r\n    lat: 48.3794,\r\n    lng: 31.1656,\r\n};\r\n\r\nconst MapPolygonPicker = ({ onPolygonComplete, setManualCoordsFromMap }) => {\r\n    const [paths, setPaths] = useState([]);\r\n    const mapRef = useRef(null);\r\n    const polygonRef = useRef(null);\r\n\r\n    const handleClick = useCallback((event) => {\r\n        const newPoint = {\r\n            lat: parseFloat(event.latLng.lat().toFixed(6)),\r\n            lng: parseFloat(event.latLng.lng().toFixed(6)),\r\n        };\r\n        setPaths((prev) => [...prev, newPoint]);\r\n    }, []);\r\n\r\n    // Оновлюємо текст координат при зміні точок\r\n    const updateCoordsText = useCallback((points) => {\r\n        const coordsText = points\r\n            .map((point) => `[${point.lat}, ${point.lng}]`)\r\n            .join(\",\\n\");\r\n        setManualCoordsFromMap?.(coordsText);\r\n    }, [setManualCoordsFromMap]);\r\n\r\n    // Стежимо за змінами `paths`\r\n    useEffect(() => {\r\n        if (paths.length > 0) {\r\n            updateCoordsText(paths);\r\n        }\r\n    }, [paths, updateCoordsText]);\r\n\r\n    // Ця функція спрацьовує після редагування полігону\r\n    const onEdit = () => {\r\n        if (polygonRef.current) {\r\n            const nextPath = polygonRef.current.getPath().getArray().map((latLng) => ({\r\n                lat: parseFloat(latLng.lat().toFixed(6)),\r\n                lng: parseFloat(latLng.lng().toFixed(6)),\r\n            }));\r\n            setPaths(nextPath);\r\n        }\r\n    };\r\n\r\n    const handleComplete = () => {\r\n        if (paths.length < 3) {\r\n            alert(\"Позначте хоча б три точки, щоб утворити полігон\");\r\n            return;\r\n        }\r\n        const simplified = paths.map(p => [p.lat, p.lng]);\r\n        onPolygonComplete?.(simplified);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setPaths([]);\r\n        setManualCoordsFromMap?.(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full h-full relative\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={6}\r\n                onClick={handleClick}\r\n                onLoad={(map) => (mapRef.current = map)}\r\n            >\r\n                {paths.length > 0 && (\r\n                    <Polygon\r\n                        path={paths}\r\n                        options={{\r\n                            fillColor: \"#00FF00\",\r\n                            fillOpacity: 0.3,\r\n                            strokeColor: \"#00AA00\",\r\n                            strokeOpacity: 1,\r\n                            strokeWeight: 2,\r\n                            editable: true,\r\n                            draggable: false,\r\n                        }}\r\n                        onLoad={(polygon) => (polygonRef.current = polygon)}\r\n                        onMouseUp={onEdit}\r\n                        onDragEnd={onEdit}\r\n                        onMouseOut={onEdit}\r\n                    />\r\n                )}\r\n            </GoogleMap>\r\n\r\n            <div className=\"absolute bottom-2 right-2 flex gap-2\">\r\n                <button\r\n                    className=\"bg-green-500 text-white px-3 py-1 rounded text-sm shadow-md\"\r\n                    onClick={handleComplete}\r\n                >\r\n                    Підтвердити\r\n                </button>\r\n                <button\r\n                    className=\"bg-red-500 text-white px-3 py-1 rounded text-sm shadow-md\"\r\n                    onClick={handleReset}\r\n                >\r\n                    Скинути\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPolygonPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}