{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\AnalyticsField.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Line as LineChart } from 'chartist';\nimport 'chartist/dist/chartist.css';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyticsField = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [timeRange, setTimeRange] = useState('7d');\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const chartContainerRef = useRef(null);\n  const selectField = useCallback(async fieldId => {\n    if (!fieldId) return;\n    try {\n      await api.post('/fields/select/', {\n        fieldId\n      });\n    } catch (err) {\n      throw new Error(`Не вдалося вибрати поле ID ${fieldId}.`);\n    }\n  }, []);\n  const deselectField = useCallback(async fieldId => {\n    if (!fieldId) return;\n    try {\n      await api.post('/fields/deselect/', {\n        fieldId\n      });\n    } catch (err) {\n      console.error(`Deselect помилка для поля ID ${fieldId}:`, err);\n    }\n  }, []);\n  const fetchData = useCallback(async fieldId => {\n    setIsLoading(true);\n    setError(null);\n    setChartData(null);\n    try {\n      var _response$data;\n      await selectField(fieldId);\n      const response = await api.get(`/field-measurements/chart/${timeRange}`);\n      const rawData = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.aggregatedData;\n      if (!Array.isArray(rawData)) {\n        throw new Error('Некоректний формат даних від сервера.');\n      }\n      const timestamps = new Set();\n      rawData.forEach(sensor => {\n        var _sensor$data;\n        return sensor === null || sensor === void 0 ? void 0 : (_sensor$data = sensor.data) === null || _sensor$data === void 0 ? void 0 : _sensor$data.forEach(entry => (entry === null || entry === void 0 ? void 0 : entry.timestamp) && timestamps.add(entry.timestamp));\n      });\n      const labels = Array.from(timestamps).sort((a, b) => new Date(a) - new Date(b));\n      const series = rawData.map(sensor => {\n        var _sensor$data2;\n        const valueMap = new Map(((_sensor$data2 = sensor.data) === null || _sensor$data2 === void 0 ? void 0 : _sensor$data2.map(entry => [entry.timestamp, entry.value])) || []);\n        const data = labels.map(ts => {\n          var _valueMap$get;\n          return (_valueMap$get = valueMap.get(ts)) !== null && _valueMap$get !== void 0 ? _valueMap$get : null;\n        });\n        return data;\n      });\n      const hasData = series.some(data => data.some(val => val !== null));\n      if (!labels.length || !hasData) {\n        setChartData(null);\n      } else {\n        setChartData({\n          labels,\n          series\n        });\n      }\n    } catch (err) {\n      setError(err.message || 'Не вдалося завантажити дані.');\n      setChartData(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeRange, selectField]);\n  useEffect(() => {\n    if (!id) {\n      setChartData(null);\n      setError(null);\n      setIsLoading(false);\n      return;\n    }\n    fetchData(id);\n    return () => {\n      deselectField(id);\n    };\n  }, [id, timeRange, fetchData, deselectField]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"\\u0410\\u043D\\u0430\\u043B\\u0456\\u0442\\u0438\\u043A\\u0430 \\u043F\\u043E\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: [\"\\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this), !isLoading && !chartData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u0434\\u0430\\u043D\\u0438\\u0445 \\u0434\\u043B\\u044F \\u0432\\u0456\\u0434\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      className: \"ct-chart ct-major-twelfth\",\n      children: chartData && /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        options: {\n          showPoint: true,\n          fullWidth: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(AnalyticsField, \"OGeUgzUrzzfmA+o7rXVh53iAjsE=\", false, function () {\n  return [useParams];\n});\n_c = AnalyticsField;\nexport default AnalyticsField;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsField\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","useParams","Line","LineChart","api","jsxDEV","_jsxDEV","AnalyticsField","_s","id","timeRange","setTimeRange","chartData","setChartData","isLoading","setIsLoading","error","setError","chartContainerRef","selectField","fieldId","post","err","Error","deselectField","console","fetchData","_response$data","response","get","rawData","data","aggregatedData","Array","isArray","timestamps","Set","forEach","sensor","_sensor$data","entry","timestamp","add","labels","from","sort","a","b","Date","series","map","_sensor$data2","valueMap","Map","value","ts","_valueMap$get","hasData","some","val","length","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","options","showPoint","fullWidth","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/AnalyticsField.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Line as LineChart } from 'chartist';\r\nimport 'chartist/dist/chartist.css';\r\nimport api from '../utils/api';\r\n\r\nconst AnalyticsField = () => {\r\n    const { id } = useParams();\r\n    const [timeRange, setTimeRange] = useState('7d');\r\n    const [chartData, setChartData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const chartContainerRef = useRef(null);\r\n\r\n    const selectField = useCallback(async (fieldId) => {\r\n        if (!fieldId) return;\r\n        try {\r\n            await api.post('/fields/select/', { fieldId });\r\n        } catch (err) {\r\n            throw new Error(`Не вдалося вибрати поле ID ${fieldId}.`);\r\n        }\r\n    }, []);\r\n\r\n    const deselectField = useCallback(async (fieldId) => {\r\n        if (!fieldId) return;\r\n        try {\r\n            await api.post('/fields/deselect/', { fieldId });\r\n        } catch (err) {\r\n            console.error(`Deselect помилка для поля ID ${fieldId}:`, err);\r\n        }\r\n    }, []);\r\n\r\n    const fetchData = useCallback(async (fieldId) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setChartData(null);\r\n\r\n        try {\r\n            await selectField(fieldId);\r\n            const response = await api.get(`/field-measurements/chart/${timeRange}`);\r\n            const rawData = response.data?.aggregatedData;\r\n\r\n            if (!Array.isArray(rawData)) {\r\n                throw new Error('Некоректний формат даних від сервера.');\r\n            }\r\n\r\n            const timestamps = new Set();\r\n            rawData.forEach(sensor =>\r\n                sensor?.data?.forEach(entry =>\r\n                    entry?.timestamp && timestamps.add(entry.timestamp)\r\n                )\r\n            );\r\n\r\n            const labels = Array.from(timestamps).sort((a, b) => new Date(a) - new Date(b));\r\n\r\n            const series = rawData.map(sensor => {\r\n                const valueMap = new Map(\r\n                    sensor.data?.map(entry => [entry.timestamp, entry.value]) || []\r\n                );\r\n\r\n                const data = labels.map(ts => valueMap.get(ts) ?? null);\r\n                return data;\r\n            });\r\n\r\n            const hasData = series.some(data => data.some(val => val !== null));\r\n\r\n            if (!labels.length || !hasData) {\r\n                setChartData(null);\r\n            } else {\r\n                setChartData({ labels, series });\r\n            }\r\n        } catch (err) {\r\n            setError(err.message || 'Не вдалося завантажити дані.');\r\n            setChartData(null);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [timeRange, selectField]);\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            setChartData(null);\r\n            setError(null);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        fetchData(id);\r\n\r\n        return () => {\r\n            deselectField(id);\r\n        };\r\n    }, [id, timeRange, fetchData, deselectField]);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-xl font-semibold mb-4\">Аналітика поля</h2>\r\n            {isLoading && <p>Завантаження...</p>}\r\n            {error && <p className=\"text-red-500\">Помилка: {error}</p>}\r\n            {!isLoading && !chartData && <p>Немає даних для відображення.</p>}\r\n            <div ref={chartContainerRef} className=\"ct-chart ct-major-twelfth\">\r\n                {chartData && (\r\n                    <LineChart\r\n                        data={chartData}\r\n                        options={{ showPoint: true, fullWidth: true }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnalyticsField;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}