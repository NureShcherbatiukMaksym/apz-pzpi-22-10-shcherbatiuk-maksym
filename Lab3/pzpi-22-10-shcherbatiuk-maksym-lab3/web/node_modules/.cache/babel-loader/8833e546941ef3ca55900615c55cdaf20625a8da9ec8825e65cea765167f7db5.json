{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\MapPolygonPicker.jsx\",\n  _s = $RefreshSig$();\n// MapPolygonPicker.jsx\n\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { GoogleMap, Polygon } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst center = {\n  lat: 48.3794,\n  lng: 31.1656\n};\nconst MapPolygonPicker = ({\n  onPolygonComplete,\n  setManualCoordsFromMap\n}) => {\n  _s();\n  const [paths, setPaths] = useState([]);\n  const mapRef = useRef(null);\n  const handleClick = useCallback(event => {\n    const newPoint = {\n      lat: parseFloat(event.latLng.lat().toFixed(6)),\n      lng: parseFloat(event.latLng.lng().toFixed(6))\n    };\n    setPaths(prev => [...prev, newPoint]);\n  }, []);\n  useEffect(() => {\n    if (setManualCoordsFromMap && paths.length > 0) {\n      const coordsText = paths.map(point => `[${point.lat}, ${point.lng}]`).join(\",\\n\");\n      setManualCoordsFromMap(coordsText);\n    }\n  }, [paths, setManualCoordsFromMap]);\n  const handleComplete = () => {\n    if (paths.length < 3) {\n      alert(\"Позначте хоча б три точки, щоб утворити полігон\");\n      return;\n    }\n    const simplified = paths.map(p => [p.lat, p.lng]);\n    if (onPolygonComplete) {\n      onPolygonComplete(simplified);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full relative\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 6,\n      onClick: handleClick,\n      onLoad: map => mapRef.current = map,\n      children: paths.length > 0 && /*#__PURE__*/_jsxDEV(Polygon, {\n        path: paths,\n        options: {\n          fillColor: \"#00FF00\",\n          fillOpacity: 0.3,\n          strokeColor: \"#00AA00\",\n          strokeOpacity: 1,\n          strokeWeight: 2,\n          editable: true,\n          draggable: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"absolute bottom-2 right-2 bg-green-500 text-white px-3 py-1 rounded text-sm shadow-md\",\n      onClick: handleComplete,\n      children: \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(MapPolygonPicker, \"VseTM0yA03FbUlz4xe3E1VoEECc=\");\n_c = MapPolygonPicker;\nexport default MapPolygonPicker;\nvar _c;\n$RefreshReg$(_c, \"MapPolygonPicker\");","map":{"version":3,"names":["React","useCallback","useState","useRef","useEffect","GoogleMap","Polygon","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapPolygonPicker","onPolygonComplete","setManualCoordsFromMap","_s","paths","setPaths","mapRef","handleClick","event","newPoint","parseFloat","latLng","toFixed","prev","length","coordsText","map","point","join","handleComplete","alert","simplified","p","className","children","mapContainerStyle","zoom","onClick","onLoad","current","path","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","editable","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/MapPolygonPicker.jsx"],"sourcesContent":["// MapPolygonPicker.jsx\r\n\r\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport { GoogleMap, Polygon } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n};\r\n\r\nconst center = {\r\n    lat: 48.3794,\r\n    lng: 31.1656,\r\n};\r\n\r\nconst MapPolygonPicker = ({ onPolygonComplete, setManualCoordsFromMap }) => {\r\n    const [paths, setPaths] = useState([]);\r\n    const mapRef = useRef(null);\r\n\r\n    const handleClick = useCallback((event) => {\r\n        const newPoint = {\r\n            lat: parseFloat(event.latLng.lat().toFixed(6)),\r\n            lng: parseFloat(event.latLng.lng().toFixed(6)),\r\n        };\r\n\r\n        setPaths((prev) => [...prev, newPoint]);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (setManualCoordsFromMap && paths.length > 0) {\r\n            const coordsText = paths\r\n                .map((point) => `[${point.lat}, ${point.lng}]`)\r\n                .join(\",\\n\");\r\n            setManualCoordsFromMap(coordsText);\r\n        }\r\n    }, [paths, setManualCoordsFromMap]);\r\n\r\n    const handleComplete = () => {\r\n        if (paths.length < 3) {\r\n            alert(\"Позначте хоча б три точки, щоб утворити полігон\");\r\n            return;\r\n        }\r\n\r\n        const simplified = paths.map(p => [p.lat, p.lng]);\r\n\r\n        if (onPolygonComplete) {\r\n            onPolygonComplete(simplified);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full h-full relative\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={6}\r\n                onClick={handleClick}\r\n                onLoad={(map) => (mapRef.current = map)}\r\n            >\r\n                {paths.length > 0 && (\r\n                    <Polygon\r\n                        path={paths}\r\n                        options={{\r\n                            fillColor: \"#00FF00\",\r\n                            fillOpacity: 0.3,\r\n                            strokeColor: \"#00AA00\",\r\n                            strokeOpacity: 1,\r\n                            strokeWeight: 2,\r\n                            editable: true,\r\n                            draggable: false,\r\n                        }}\r\n                    />\r\n                )}\r\n            </GoogleMap>\r\n\r\n            <button\r\n                className=\"absolute bottom-2 right-2 bg-green-500 text-white px-3 py-1 rounded text-sm shadow-md\"\r\n                onClick={handleComplete}\r\n            >\r\n                Підтвердити\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapPolygonPicker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}