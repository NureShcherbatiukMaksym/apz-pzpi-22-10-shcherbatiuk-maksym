{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\categories\\\\AdminSensors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../utils/api';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminSensors = () => {\n  _s();\n  const [sensors, setSensors] = useState([]);\n  const [newSensorType, setNewSensorType] = useState('');\n  const [newSensorRadius, setNewSensorRadius] = useState('');\n  const [newSensorStatus, setNewSensorStatus] = useState('active');\n  const [newSensorUnit, setNewSensorUnit] = useState('');\n  const [editSensorId, setEditSensorId] = useState(null);\n  const [editSensorType, setEditSensorType] = useState('');\n  const [editSensorRadius, setEditSensorRadius] = useState('');\n  const [editSensorStatus, setEditSensorStatus] = useState('');\n  const [editSensorUnit, setEditSensorUnit] = useState('');\n  const {\n    t\n  } = useTranslation();\n  const statusOptions = ['active', 'inactive', 'maintenance', 'calibrating', 'error', 'retired'];\n  const typeOptions = ['temperature', 'soil_moisture', 'acidity'];\n  useEffect(() => {\n    fetchSensors();\n  }, []);\n  const fetchSensors = async () => {\n    try {\n      const res = await api.get('/sensors', {\n        withCredentials: true\n      });\n      setSensors(res.data);\n    } catch (err) {\n      console.error('Error fetching sensors:', err);\n    }\n  };\n  const handleAddSensor = async () => {\n    try {\n      await api.post('/sensors', {\n        type: newSensorType,\n        radius: newSensorRadius,\n        status: newSensorStatus,\n        unit: newSensorUnit\n      }, {\n        withCredentials: true\n      });\n      setNewSensorType('');\n      setNewSensorRadius('');\n      setNewSensorStatus('active');\n      setNewSensorUnit('');\n      fetchSensors();\n    } catch (err) {\n      console.error('Error adding sensor:', err);\n    }\n  };\n  const handleUpdateSensor = async id => {\n    try {\n      await api.put(`/sensors/${id}`, {\n        type: editSensorType,\n        radius: editSensorRadius,\n        status: editSensorStatus,\n        unit: editSensorUnit\n      }, {\n        withCredentials: true\n      });\n      setEditSensorId(null);\n      setEditSensorType('');\n      setEditSensorRadius('');\n      setEditSensorStatus('');\n      setEditSensorUnit('');\n      fetchSensors();\n    } catch (err) {\n      console.error('Error updating sensor:', err);\n    }\n  };\n  const handleDeleteSensor = async id => {\n    try {\n      await api.delete(`/sensors/${id}`, {\n        withCredentials: true\n      });\n      fetchSensors();\n    } catch (err) {\n      console.error('Error deleting sensor:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-y-auto max-h-screen w-full\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 px-4 pt-4\",\n      children: t(`sensor_management`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 px-4\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap items-center gap-2\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newSensorType,\n          onChange: e => setNewSensorType(e.target.value),\n          className: \"border px-4 py-2 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: t(`select_sensor_type`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), typeOptions.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: t(`sensor_radius`),\n          value: newSensorRadius,\n          onChange: e => setNewSensorRadius(e.target.value),\n          className: \"border px-4 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newSensorStatus,\n          onChange: e => setNewSensorStatus(e.target.value),\n          className: \"border px-4 py-2 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: t(`select_sensor_status`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), statusOptions.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status,\n            children: t(`status_${status}`)\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newSensorUnit,\n          onChange: e => setNewSensorUnit(e.target.value),\n          className: \"border px-4 py-2 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: t(`sensor_unit`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\xB0C\",\n            children: \"\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"%\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pH\",\n            children: \"pH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddSensor,\n          className: \"bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600\",\n          children: t(`add_sensor`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 pb-4\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full table-auto border-collapse border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2 \",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: t(`type`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: t(`radius`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: t(`sensor_status`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2\",\n              children: t(`unit`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-4 py-2 w-1/6\",\n              children: t(`actions`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [sensors.map(sensor => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2 text-center\",\n              children: sensor.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editSensorType,\n                onChange: e => setEditSensorType(e.target.value),\n                className: \"border px-2 py-1 rounded w-full\",\n                children: typeOptions.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this) : sensor.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editSensorRadius,\n                onChange: e => setEditSensorRadius(e.target.value),\n                className: \"border px-2 py-1 rounded w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this) : sensor.radius\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editSensorStatus,\n                onChange: e => setEditSensorStatus(e.target.value),\n                className: \"border px-2 py-1 rounded w-full\",\n                children: statusOptions.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: status,\n                  children: t(`status_${status}`)\n                }, status, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this) :\n              // Переклад відображуваного статусу\n              t(`status_${sensor.status}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2\",\n              children: editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editSensorUnit,\n                onChange: e => setEditSensorUnit(e.target.value),\n                className: \"border px-2 py-1 rounded w-full\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: t(`sensor_unit`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 41\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\\xB0C\",\n                  children: \"\\xB0C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"%\",\n                  children: \"%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pH\",\n                  children: \"pH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this) : sensor.unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-4 py-2 w-1/6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center space-x-2\",\n                children: [editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateSensor(sensor.id),\n                  className: \"bg-green-500 text-white px-2 py-1 rounded\",\n                  children: t(`save_changes`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setEditSensorId(sensor.id);\n                    setEditSensorType(sensor.type);\n                    setEditSensorRadius(sensor.radius);\n                    setEditSensorStatus(sensor.status);\n                    setEditSensorUnit(sensor.unit);\n                  },\n                  className: \"bg-yellow-400 text-white px-2 py-1 rounded\",\n                  children: t(`edit`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteSensor(sensor.id),\n                  className: \"bg-red-500 text-white px-2 py-1 rounded\",\n                  children: t(`delete`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, sensor.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)), !sensors.length && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              className: \"text-center text-gray-500 py-4\",\n              children: t('no_sensors_found')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminSensors, \"OkS2UHDfAvoQAR0n+j0U/PZT5UU=\", false, function () {\n  return [useTranslation];\n});\n_c = AdminSensors;\nexport default AdminSensors;\nvar _c;\n$RefreshReg$(_c, \"AdminSensors\");","map":{"version":3,"names":["React","useEffect","useState","api","useTranslation","jsxDEV","_jsxDEV","AdminSensors","_s","sensors","setSensors","newSensorType","setNewSensorType","newSensorRadius","setNewSensorRadius","newSensorStatus","setNewSensorStatus","newSensorUnit","setNewSensorUnit","editSensorId","setEditSensorId","editSensorType","setEditSensorType","editSensorRadius","setEditSensorRadius","editSensorStatus","setEditSensorStatus","editSensorUnit","setEditSensorUnit","t","statusOptions","typeOptions","fetchSensors","res","get","withCredentials","data","err","console","error","handleAddSensor","post","type","radius","status","unit","handleUpdateSensor","id","put","handleDeleteSensor","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","placeholder","onClick","sensor","length","colSpan","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/categories/AdminSensors.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../utils/api';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst AdminSensors = () => {\r\n    const [sensors, setSensors] = useState([]);\r\n    const [newSensorType, setNewSensorType] = useState('');\r\n    const [newSensorRadius, setNewSensorRadius] = useState('');\r\n    const [newSensorStatus, setNewSensorStatus] = useState('active');\r\n    const [newSensorUnit, setNewSensorUnit] = useState('');\r\n    const [editSensorId, setEditSensorId] = useState(null);\r\n    const [editSensorType, setEditSensorType] = useState('');\r\n    const [editSensorRadius, setEditSensorRadius] = useState('');\r\n    const [editSensorStatus, setEditSensorStatus] = useState('');\r\n    const [editSensorUnit, setEditSensorUnit] = useState('');\r\n    const { t } = useTranslation();\r\n    const statusOptions = ['active', 'inactive', 'maintenance', 'calibrating', 'error', 'retired'];\r\n    const typeOptions = ['temperature', 'soil_moisture', 'acidity'];\r\n\r\n    useEffect(() => {\r\n        fetchSensors();\r\n    }, []);\r\n\r\n    const fetchSensors = async () => {\r\n        try {\r\n            const res = await api.get('/sensors', { withCredentials: true });\r\n            setSensors(res.data);\r\n        } catch (err) {\r\n            console.error('Error fetching sensors:', err);\r\n        }\r\n    };\r\n\r\n    const handleAddSensor = async () => {\r\n        try {\r\n            await api.post('/sensors',\r\n                {\r\n                    type: newSensorType,\r\n                    radius: newSensorRadius,\r\n                    status: newSensorStatus,\r\n                    unit: newSensorUnit\r\n                },\r\n                { withCredentials: true }\r\n            );\r\n            setNewSensorType('');\r\n            setNewSensorRadius('');\r\n            setNewSensorStatus('active');\r\n            setNewSensorUnit('');\r\n            fetchSensors();\r\n        } catch (err) {\r\n            console.error('Error adding sensor:', err);\r\n        }\r\n    };\r\n\r\n    const handleUpdateSensor = async (id) => {\r\n        try {\r\n            await api.put(`/sensors/${id}`,\r\n                {\r\n                    type: editSensorType,\r\n                    radius: editSensorRadius,\r\n                    status: editSensorStatus,\r\n                    unit: editSensorUnit\r\n                },\r\n                { withCredentials: true }\r\n            );\r\n            setEditSensorId(null);\r\n            setEditSensorType('');\r\n            setEditSensorRadius('');\r\n            setEditSensorStatus('');\r\n            setEditSensorUnit('');\r\n            fetchSensors();\r\n        } catch (err) {\r\n            console.error('Error updating sensor:', err);\r\n        }\r\n    };\r\n\r\n    const handleDeleteSensor = async (id) => {\r\n        try {\r\n            await api.delete(`/sensors/${id}`, { withCredentials: true });\r\n            fetchSensors();\r\n        } catch (err) {\r\n            console.error('Error deleting sensor:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"overflow-y-auto max-h-screen w-full\"> {/* <-- Прибрано p-4 */}\r\n            {/* Додамо padding до заголовка (зверху та по боках) */}\r\n            <h2 className=\"text-2xl font-bold mb-4 px-4 pt-4\">{t(`sensor_management`)}</h2> {/* <-- Додано px-4 pt-4 */}\r\n\r\n            {/* Форма додавання сенсора - додаємо padding по боках */}\r\n            <div className=\"mb-6 px-4\"> {/* <-- Додано px-4 */}\r\n                {/* Додано flex wrap та items-center для адаптивності форми */}\r\n                <div className=\"flex flex-wrap items-center gap-2\"> {/* <-- Додано flex wrap items-center gap-2 */}\r\n                    <select\r\n                        value={newSensorType}\r\n                        onChange={(e) => setNewSensorType(e.target.value)}\r\n                        className=\"border px-4 py-2 rounded\"\r\n                    >\r\n                        <option value=\"\">{t(`select_sensor_type`)}</option>\r\n                        {typeOptions.map((type) => (\r\n                            <option key={type} value={type}>{type}</option>\r\n                        ))}\r\n                    </select>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder={t(`sensor_radius`)}\r\n                        value={newSensorRadius}\r\n                        onChange={(e) => setNewSensorRadius(e.target.value)}\r\n                        className=\"border px-4 py-2 rounded\"\r\n                    />\r\n                    <select\r\n                        value={newSensorStatus}\r\n                        onChange={(e) => setNewSensorStatus(e.target.value)}\r\n                        className=\"border px-4 py-2 rounded\"\r\n                    >\r\n                        <option value=\"\">{t(`select_sensor_status`)}</option>\r\n                        {statusOptions.map((status) => (\r\n                            <option key={status} value={status}>{t(`status_${status}`)}</option>\r\n                            ))}\r\n                    </select>\r\n                    <select\r\n                        value={newSensorUnit}\r\n                        onChange={(e) => setNewSensorUnit(e.target.value)}\r\n                        className=\"border px-4 py-2 rounded\"\r\n                    >\r\n                        <option value=\"\">{t(`sensor_unit`)}</option>\r\n                        <option value=\"°C\">°C</option>\r\n                        <option value=\"%\">%</option>\r\n                        <option value=\"pH\">pH</option>\r\n                    </select>\r\n                    <button\r\n                        onClick={handleAddSensor}\r\n                        className=\"bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600\"\r\n                    >\r\n                        {t(`add_sensor`)}\r\n                    </button>\r\n                </div> {/* <-- Кінець div flex wrap */}\r\n            </div>\r\n\r\n\r\n            <div className=\"px-4 pb-4\"> {/* <-- Додано px-4 pb-4 */}\r\n                <table className=\"w-full table-auto border-collapse border border-gray-200\">\r\n                    <thead>\r\n                    <tr className=\"bg-gray-100\">\r\n                        <th className=\"border px-4 py-2 \">ID</th>\r\n                        <th className=\"border px-4 py-2\">{t(`type`)}</th>\r\n                        <th className=\"border px-4 py-2\">{t(`radius`)}</th>\r\n                        <th className=\"border px-4 py-2\">{t(`sensor_status`)}</th>\r\n                        <th className=\"border px-4 py-2\">{t(`unit`)}</th>\r\n                        <th className=\"border px-4 py-2 w-1/6\">{t(`actions`)}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {sensors.map((sensor) => (\r\n                        <tr key={sensor.id}>\r\n                            <td className=\"border px-4 py-2 text-center\">{sensor.id}</td>\r\n                            <td className=\"border px-4 py-2\">\r\n                                {editSensorId === sensor.id ? (\r\n                                    <select\r\n                                        value={editSensorType}\r\n                                        onChange={(e) => setEditSensorType(e.target.value)}\r\n                                        className=\"border px-2 py-1 rounded w-full\"\r\n                                    >\r\n                                        {typeOptions.map((type) => (\r\n                                            <option key={type} value={type}>{type}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                ) : (\r\n                                    sensor.type\r\n                                )}\r\n                            </td>\r\n                            <td className=\"border px-4 py-2\">\r\n                                {editSensorId === sensor.id ? (\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={editSensorRadius}\r\n                                        onChange={(e) => setEditSensorRadius(e.target.value)}\r\n                                        className=\"border px-2 py-1 rounded w-full\"\r\n                                    />\r\n                                ) : (\r\n                                    sensor.radius\r\n                                )}\r\n                            </td>\r\n                            <td className=\"border px-4 py-2\">\r\n                                {editSensorId === sensor.id ? (\r\n                                    <select\r\n                                        value={editSensorStatus}\r\n                                        onChange={(e) => setEditSensorStatus(e.target.value)}\r\n                                        className=\"border px-2 py-1 rounded w-full\"\r\n                                    >\r\n                                        {statusOptions.map((status) => (\r\n                                            <option key={status} value={status}>{t(`status_${status}`)}</option>\r\n                                            ))}\r\n                                    </select>\r\n                                ) : (\r\n                                    // Переклад відображуваного статусу\r\n                                    t(`status_${sensor.status}`)\r\n                                )}\r\n                            </td>\r\n                            <td className=\"border px-4 py-2\">\r\n                                {editSensorId === sensor.id ? (\r\n                                    <select\r\n                                        value={editSensorUnit}\r\n                                        onChange={(e) => setEditSensorUnit(e.target.value)}\r\n                                        className=\"border px-2 py-1 rounded w-full\" \r\n                                    >\r\n                                        <option value=\"\">{t(`sensor_unit`)}</option> {/* <-- Додано переклад */}\r\n                                        <option value=\"°C\">°C</option>\r\n                                        <option value=\"%\">%</option>\r\n                                        <option value=\"pH\">pH</option>\r\n                                    </select>\r\n                                ) : (\r\n                                    sensor.unit\r\n                                )}\r\n                            </td>\r\n                            <td className=\"border px-4 py-2 w-1/6\">\r\n                                <div className=\"flex justify-center space-x-2\">\r\n                                    {editSensorId === sensor.id ? (\r\n                                        <button\r\n                                            onClick={() => handleUpdateSensor(sensor.id)}\r\n                                            className=\"bg-green-500 text-white px-2 py-1 rounded\"\r\n                                        >\r\n                                            {t(`save_changes`)}\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                setEditSensorId(sensor.id);\r\n                                                setEditSensorType(sensor.type);\r\n                                                setEditSensorRadius(sensor.radius);\r\n                                                setEditSensorStatus(sensor.status);\r\n                                                setEditSensorUnit(sensor.unit);\r\n                                            }}\r\n                                            className=\"bg-yellow-400 text-white px-2 py-1 rounded\"\r\n                                        >\r\n                                            {t(`edit`)}\r\n                                        </button>\r\n                                    )}\r\n                                    <button\r\n                                        onClick={() => handleDeleteSensor(sensor.id)}\r\n                                        className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                                    >\r\n                                        {t(`delete`)}\r\n                                    </button>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    {/* Повідомлення, якщо немає сенсорів */}\r\n                    {!sensors.length && (\r\n                        <tr>\r\n                            <td colSpan=\"6\" className=\"text-center text-gray-500 py-4\">{t('no_sensors_found')}</td> {/* <-- Додано переклад */}\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminSensors;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}