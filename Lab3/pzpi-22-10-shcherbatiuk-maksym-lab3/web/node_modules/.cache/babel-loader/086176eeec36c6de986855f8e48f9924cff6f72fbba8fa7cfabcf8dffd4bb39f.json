{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\categories\\\\AdminSensors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../utils/api';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminSensors = () => {\n  _s();\n  const [sensors, setSensors] = useState([]);\n  const [newSensorType, setNewSensorType] = useState('');\n  const [newSensorRadius, setNewSensorRadius] = useState('');\n  const [newSensorStatus, setNewSensorStatus] = useState('active');\n  const [newSensorUnit, setNewSensorUnit] = useState('');\n  const [editSensorId, setEditSensorId] = useState(null);\n  const [editSensorType, setEditSensorType] = useState('');\n  const [editSensorRadius, setEditSensorRadius] = useState('');\n  const [editSensorStatus, setEditSensorStatus] = useState('');\n  const [editSensorUnit, setEditSensorUnit] = useState('');\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const statusOptions = ['active', 'inactive', 'maintenance', 'calibrating', 'error', 'retired'];\n  const typeOptions = ['temperature', 'soil_moisture', 'acidity'];\n  useEffect(() => {\n    fetchSensors();\n  }, []);\n  const fetchSensors = async () => {\n    try {\n      const res = await api.get('/sensors', {\n        withCredentials: true\n      });\n      setSensors(res.data);\n    } catch (err) {\n      console.error('Error fetching sensors:', err);\n    }\n  };\n  const handleAddSensor = async () => {\n    try {\n      await api.post('/sensors', {\n        type: newSensorType,\n        radius: newSensorRadius,\n        status: newSensorStatus,\n        unit: newSensorUnit\n      }, {\n        withCredentials: true\n      });\n      setNewSensorType('');\n      setNewSensorRadius('');\n      setNewSensorStatus('active');\n      setNewSensorUnit('');\n      fetchSensors();\n    } catch (err) {\n      console.error('Error adding sensor:', err);\n    }\n  };\n  const handleUpdateSensor = async id => {\n    try {\n      await api.put(`/sensors/${id}`, {\n        type: editSensorType,\n        radius: editSensorRadius,\n        status: editSensorStatus,\n        unit: editSensorUnit\n      }, {\n        withCredentials: true\n      });\n      setEditSensorId(null);\n      setEditSensorType('');\n      setEditSensorRadius('');\n      setEditSensorStatus('');\n      setEditSensorUnit('');\n      fetchSensors();\n    } catch (err) {\n      console.error('Error updating sensor:', err);\n    }\n  };\n  const handleDeleteSensor = async id => {\n    try {\n      await api.delete(`/sensors/${id}`, {\n        withCredentials: true\n      });\n      fetchSensors();\n    } catch (err) {\n      console.error('Error deleting sensor:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: t(`sensor_management`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newSensorType,\n        onChange: e => setNewSensorType(e.target.value),\n        className: \"border px-4 py-2 mr-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: t(`select_sensor_type`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), typeOptions.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: t(`sensor_radius`),\n        value: newSensorRadius,\n        onChange: e => setNewSensorRadius(e.target.value),\n        className: \"border px-4 py-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newSensorStatus,\n        onChange: e => setNewSensorStatus(e.target.value),\n        className: \"border px-4 py-2 mr-2\",\n        children: statusOptions.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: status,\n          children: status\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newSensorUnit,\n        onChange: e => setNewSensorUnit(e.target.value),\n        className: \"border px-4 py-2 mr-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: t(`sensor_unit`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\\xB0C\",\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"%\",\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pH\",\n          children: \"pH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSensor,\n        className: \"bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600\",\n        children: t(`add_sensor`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full table-auto border-collapse border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2\",\n            children: t(`type`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2\",\n            children: t(`radius`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2\",\n            children: t(`sensor_status`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2\",\n            children: t(`unit`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2\",\n            children: t(`actions`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sensors.map(sensor => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: sensor.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editSensorType,\n              onChange: e => setEditSensorType(e.target.value),\n              className: \"border px-2 py-1\",\n              children: typeOptions.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this) : sensor.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: editSensorRadius,\n              onChange: e => setEditSensorRadius(e.target.value),\n              className: \"border px-2 py-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this) : sensor.radius\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editSensorStatus,\n              onChange: e => setEditSensorStatus(e.target.value),\n              className: \"border px-2 py-1\",\n              children: statusOptions.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: status,\n                children: status\n              }, status, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this) : sensor.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editSensorUnit,\n              onChange: e => setEditSensorUnit(e.target.value),\n              className: \"border px-2 py-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\\xB0C\",\n                children: \"\\xB0C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"%\",\n                children: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"pH\",\n                children: \"pH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this) : sensor.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2 space-x-2\",\n            children: [editSensorId === sensor.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdateSensor(sensor.id),\n              className: \"bg-green-500 text-white px-2 py-1 rounded\",\n              children: t(`save_changes`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditSensorId(sensor.id);\n                setEditSensorType(sensor.type);\n                setEditSensorRadius(sensor.radius);\n                setEditSensorStatus(sensor.status);\n                setEditSensorUnit(sensor.unit);\n              },\n              className: \"bg-yellow-400 text-white px-2 py-1 rounded\",\n              children: t(`edit`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteSensor(sensor.id),\n              className: \"bg-red-500 text-white px-2 py-1 rounded\",\n              children: t(`delete`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, sensor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminSensors, \"Dy0cVe5pAqaG7SpAsS3nYnGkX2E=\", false, function () {\n  return [useTranslation];\n});\n_c = AdminSensors;\nexport default AdminSensors;\nvar _c;\n$RefreshReg$(_c, \"AdminSensors\");","map":{"version":3,"names":["React","useEffect","useState","api","useTranslation","jsxDEV","_jsxDEV","AdminSensors","_s","sensors","setSensors","newSensorType","setNewSensorType","newSensorRadius","setNewSensorRadius","newSensorStatus","setNewSensorStatus","newSensorUnit","setNewSensorUnit","editSensorId","setEditSensorId","editSensorType","setEditSensorType","editSensorRadius","setEditSensorRadius","editSensorStatus","setEditSensorStatus","editSensorUnit","setEditSensorUnit","t","i18n","statusOptions","typeOptions","fetchSensors","res","get","withCredentials","data","err","console","error","handleAddSensor","post","type","radius","status","unit","handleUpdateSensor","id","put","handleDeleteSensor","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","placeholder","onClick","sensor","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/categories/AdminSensors.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../utils/api';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst AdminSensors = () => {\r\n    const [sensors, setSensors] = useState([]);\r\n    const [newSensorType, setNewSensorType] = useState('');\r\n    const [newSensorRadius, setNewSensorRadius] = useState('');\r\n    const [newSensorStatus, setNewSensorStatus] = useState('active');\r\n    const [newSensorUnit, setNewSensorUnit] = useState('');\r\n    const [editSensorId, setEditSensorId] = useState(null);\r\n    const [editSensorType, setEditSensorType] = useState('');\r\n    const [editSensorRadius, setEditSensorRadius] = useState('');\r\n    const [editSensorStatus, setEditSensorStatus] = useState('');\r\n    const [editSensorUnit, setEditSensorUnit] = useState('');\r\n    const { t, i18n } = useTranslation();\r\n    const statusOptions = ['active', 'inactive', 'maintenance', 'calibrating', 'error', 'retired'];\r\n    const typeOptions = ['temperature', 'soil_moisture', 'acidity'];\r\n\r\n    useEffect(() => {\r\n        fetchSensors();\r\n    }, []);\r\n\r\n    const fetchSensors = async () => {\r\n        try {\r\n            const res = await api.get('/sensors', { withCredentials: true });\r\n            setSensors(res.data);\r\n        } catch (err) {\r\n            console.error('Error fetching sensors:', err);\r\n        }\r\n    };\r\n\r\n    const handleAddSensor = async () => {\r\n        try {\r\n            await api.post('/sensors',\r\n                {\r\n                    type: newSensorType,\r\n                    radius: newSensorRadius,\r\n                    status: newSensorStatus,\r\n                    unit: newSensorUnit\r\n                },\r\n                { withCredentials: true }\r\n            );\r\n            setNewSensorType('');\r\n            setNewSensorRadius('');\r\n            setNewSensorStatus('active');\r\n            setNewSensorUnit('');\r\n            fetchSensors();\r\n        } catch (err) {\r\n            console.error('Error adding sensor:', err);\r\n        }\r\n    };\r\n\r\n    const handleUpdateSensor = async (id) => {\r\n        try {\r\n            await api.put(`/sensors/${id}`,\r\n                {\r\n                    type: editSensorType,\r\n                    radius: editSensorRadius,\r\n                    status: editSensorStatus,\r\n                    unit: editSensorUnit\r\n                },\r\n                { withCredentials: true }\r\n            );\r\n            setEditSensorId(null);\r\n            setEditSensorType('');\r\n            setEditSensorRadius('');\r\n            setEditSensorStatus('');\r\n            setEditSensorUnit('');\r\n            fetchSensors();\r\n        } catch (err) {\r\n            console.error('Error updating sensor:', err);\r\n        }\r\n    };\r\n\r\n    const handleDeleteSensor = async (id) => {\r\n        try {\r\n            await api.delete(`/sensors/${id}`, { withCredentials: true });\r\n            fetchSensors();\r\n        } catch (err) {\r\n            console.error('Error deleting sensor:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">{t(`sensor_management`)}</h2>\r\n\r\n            <div className=\"mb-6\">\r\n                <select\r\n                    value={newSensorType}\r\n                    onChange={(e) => setNewSensorType(e.target.value)}\r\n                    className=\"border px-4 py-2 mr-2\"\r\n                >\r\n                    <option value=\"\">{t(`select_sensor_type`)}</option>\r\n                    {typeOptions.map((type) => (\r\n                        <option key={type} value={type}>{type}</option>\r\n                    ))}\r\n                </select>\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder={t(`sensor_radius`)}\r\n                    value={newSensorRadius}\r\n                    onChange={(e) => setNewSensorRadius(e.target.value)}\r\n                    className=\"border px-4 py-2 mr-2\"\r\n                />\r\n                <select\r\n                    value={newSensorStatus}\r\n                    onChange={(e) => setNewSensorStatus(e.target.value)}\r\n                    className=\"border px-4 py-2 mr-2\"\r\n                >\r\n                    {statusOptions.map((status) => (\r\n                        <option key={status} value={status}>{status}</option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    value={newSensorUnit}\r\n                    onChange={(e) => setNewSensorUnit(e.target.value)}\r\n                    className=\"border px-4 py-2 mr-2\"\r\n                >\r\n                    <option value=\"\">{t(`sensor_unit`)}</option>\r\n                    <option value=\"°C\">°C</option>\r\n                    <option value=\"%\">%</option>\r\n                    <option value=\"pH\">pH</option>\r\n                </select>\r\n                <button\r\n                    onClick={handleAddSensor}\r\n                    className=\"bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600\"\r\n                >\r\n                    {t(`add_sensor`)}\r\n                </button>\r\n            </div>\r\n\r\n            <table className=\"w-full table-auto border-collapse border border-gray-200\">\r\n                <thead>\r\n                <tr className=\"bg-gray-100\">\r\n                    <th className=\"border px-4 py-2\">ID</th>\r\n                    <th className=\"border px-4 py-2\">{t(`type`)}</th>\r\n                    <th className=\"border px-4 py-2\">{t(`radius`)}</th>\r\n                    <th className=\"border px-4 py-2\">{t(`sensor_status`)}</th>\r\n                    <th className=\"border px-4 py-2\">{t(`unit`)}</th>\r\n                    <th className=\"border px-4 py-2\">{t(`actions`)}</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {sensors.map((sensor) => (\r\n                    <tr key={sensor.id}>\r\n                        <td className=\"border px-4 py-2\">{sensor.id}</td>\r\n                        <td className=\"border px-4 py-2\">\r\n                            {editSensorId === sensor.id ? (\r\n                                <select\r\n                                    value={editSensorType}\r\n                                    onChange={(e) => setEditSensorType(e.target.value)}\r\n                                    className=\"border px-2 py-1\"\r\n                                >\r\n                                    {typeOptions.map((type) => (\r\n                                        <option key={type} value={type}>{type}</option>\r\n                                    ))}\r\n                                </select>\r\n                            ) : (\r\n                                sensor.type\r\n                            )}\r\n                        </td>\r\n                        <td className=\"border px-4 py-2\">\r\n                            {editSensorId === sensor.id ? (\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={editSensorRadius}\r\n                                    onChange={(e) => setEditSensorRadius(e.target.value)}\r\n                                    className=\"border px-2 py-1\"\r\n                                />\r\n                            ) : (\r\n                                sensor.radius\r\n                            )}\r\n                        </td>\r\n                        <td className=\"border px-4 py-2\">\r\n                            {editSensorId === sensor.id ? (\r\n                                <select\r\n                                    value={editSensorStatus}\r\n                                    onChange={(e) => setEditSensorStatus(e.target.value)}\r\n                                    className=\"border px-2 py-1\"\r\n                                >\r\n                                    {statusOptions.map((status) => (\r\n                                        <option key={status} value={status}>{status}</option>\r\n                                    ))}\r\n                                </select>\r\n                            ) : (\r\n                                sensor.status\r\n                            )}\r\n                        </td>\r\n                        <td className=\"border px-4 py-2\">\r\n                            {editSensorId === sensor.id ? (\r\n                                <select\r\n                                    value={editSensorUnit}\r\n                                    onChange={(e) => setEditSensorUnit(e.target.value)}\r\n                                    className=\"border px-2 py-1\"\r\n                                >\r\n                                    <option value=\"°C\">°C</option>\r\n                                    <option value=\"%\">%</option>\r\n                                    <option value=\"pH\">pH</option>\r\n                                </select>\r\n                            ) : (\r\n                                sensor.unit\r\n                            )}\r\n                        </td>\r\n                        <td className=\"border px-4 py-2 space-x-2\">\r\n                            {editSensorId === sensor.id ? (\r\n                                <button\r\n                                    onClick={() => handleUpdateSensor(sensor.id)}\r\n                                    className=\"bg-green-500 text-white px-2 py-1 rounded\"\r\n                                >\r\n                                    {t(`save_changes`)}\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    onClick={() => {\r\n                                        setEditSensorId(sensor.id);\r\n                                        setEditSensorType(sensor.type);\r\n                                        setEditSensorRadius(sensor.radius);\r\n                                        setEditSensorStatus(sensor.status);\r\n                                        setEditSensorUnit(sensor.unit);\r\n                                    }}\r\n                                    className=\"bg-yellow-400 text-white px-2 py-1 rounded\"\r\n                                >\r\n                                    {t(`edit`)}\r\n                                </button>\r\n                            )}\r\n                            <button\r\n                                onClick={() => handleDeleteSensor(sensor.id)}\r\n                                className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                            >\r\n                                {t(`delete`)}\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminSensors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}