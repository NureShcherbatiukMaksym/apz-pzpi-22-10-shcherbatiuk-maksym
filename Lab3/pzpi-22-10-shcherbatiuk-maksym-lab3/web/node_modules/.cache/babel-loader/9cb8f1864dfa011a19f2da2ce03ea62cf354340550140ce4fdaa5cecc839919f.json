{"ast":null,"code":"// utils/api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://76c7-194-4-70-16.ngrok-free.app/api',\n  // або твій домен\n  withCredentials: true // якщо токени/сесія у cookie\n});\nlet onUnauthorizedCallback = null;\n// ВИДАЛЕНО: Прапорець isLoggingOut більше не використовується тут.\n\nexport const setUnauthorizedCallback = callback => {\n  onUnauthorizedCallback = callback;\n};\n\n// ВИДАЛЕНО: Функція setIsLoggingOut більше не потрібна.\n// export const setIsLoggingOut = (status) => { ... };\n\n// Додаємо інтерцептор для відповідей\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  // Перевіряємо, чи це помилка відповіді від сервера, статус 401\n  // ТЕПЕР ЗАВЖДИ викликаємо callback при 401, покладаючись на те, що callback\n  // сам себе захистить або бекенд /logout не повертає 401, що створює цикл.\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.error('API Interceptor: Received 401 Unauthorized. Calling logout callback.');\n    if (onUnauthorizedCallback) {\n      try {\n        // ВИКЛИКАЄМО callback (logoutUser)\n        await onUnauthorizedCallback();\n      } catch (logoutErr) {\n        console.error('API Interceptor: Error during unauthorized callback execution:', logoutErr);\n      }\n    } else {\n      console.warn('API Interceptor: 401 received, but no unauthorized callback is set.');\n    }\n  }\n\n  // Завжди повертаємо помилку, щоб компонент знав про невдачу запиту\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","onUnauthorizedCallback","setUnauthorizedCallback","callback","interceptors","response","use","error","_error$response","status","console","logoutErr","warn","Promise","reject"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/utils/api.js"],"sourcesContent":["// utils/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://76c7-194-4-70-16.ngrok-free.app/api', // або твій домен\r\n    withCredentials: true, // якщо токени/сесія у cookie\r\n});\r\n\r\nlet onUnauthorizedCallback = null;\r\n// ВИДАЛЕНО: Прапорець isLoggingOut більше не використовується тут.\r\n\r\nexport const setUnauthorizedCallback = (callback) => {\r\n    onUnauthorizedCallback = callback;\r\n};\r\n\r\n// ВИДАЛЕНО: Функція setIsLoggingOut більше не потрібна.\r\n// export const setIsLoggingOut = (status) => { ... };\r\n\r\n\r\n// Додаємо інтерцептор для відповідей\r\napi.interceptors.response.use(\r\n    response => response,\r\n    async error => {\r\n        // Перевіряємо, чи це помилка відповіді від сервера, статус 401\r\n        // ТЕПЕР ЗАВЖДИ викликаємо callback при 401, покладаючись на те, що callback\r\n        // сам себе захистить або бекенд /logout не повертає 401, що створює цикл.\r\n        if (error.response?.status === 401) {\r\n            console.error('API Interceptor: Received 401 Unauthorized. Calling logout callback.');\r\n            if (onUnauthorizedCallback) {\r\n                try {\r\n                    // ВИКЛИКАЄМО callback (logoutUser)\r\n                    await onUnauthorizedCallback();\r\n                } catch (logoutErr) {\r\n                    console.error('API Interceptor: Error during unauthorized callback execution:', logoutErr);\r\n                }\r\n            } else {\r\n                console.warn('API Interceptor: 401 received, but no unauthorized callback is set.');\r\n            }\r\n        }\r\n\r\n        // Завжди повертаємо помилку, щоб компонент знав про невдачу запиту\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,6CAA6C;EAAE;EACxDC,eAAe,EAAE,IAAI,CAAE;AAC3B,CAAC,CAAC;AAEF,IAAIC,sBAAsB,GAAG,IAAI;AACjC;;AAEA,OAAO,MAAMC,uBAAuB,GAAIC,QAAQ,IAAK;EACjDF,sBAAsB,GAAGE,QAAQ;AACrC,CAAC;;AAED;AACA;;AAGA;AACAN,GAAG,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CACzBD,QAAQ,IAAIA,QAAQ,EACpB,MAAME,KAAK,IAAI;EAAA,IAAAC,eAAA;EACX;EACA;EACA;EACA,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAChCC,OAAO,CAACH,KAAK,CAAC,sEAAsE,CAAC;IACrF,IAAIN,sBAAsB,EAAE;MACxB,IAAI;QACA;QACA,MAAMA,sBAAsB,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOU,SAAS,EAAE;QAChBD,OAAO,CAACH,KAAK,CAAC,gEAAgE,EAAEI,SAAS,CAAC;MAC9F;IACJ,CAAC,MAAM;MACHD,OAAO,CAACE,IAAI,CAAC,qEAAqE,CAAC;IACvF;EACJ;;EAEA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}