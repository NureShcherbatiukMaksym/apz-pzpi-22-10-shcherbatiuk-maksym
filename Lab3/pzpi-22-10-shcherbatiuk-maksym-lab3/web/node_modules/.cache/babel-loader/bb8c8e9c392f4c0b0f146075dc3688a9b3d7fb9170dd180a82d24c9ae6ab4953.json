{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\pages\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AuthForm from '../components/AuthForm';\nimport api from '../utils/api';\nimport { useNavigate } from 'react-router-dom'; // Імпортуємо useNavigate\nimport { signInWithPopup } from \"firebase/auth\";\nimport { auth, googleProvider } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const navigate = useNavigate(); // Отримуємо функцію навігації\n  const [registerInProgress, setRegisterInProgress] = useState(false);\n  const handleRegister = async ({\n    email,\n    password,\n    name\n  }) => {\n    setRegisterInProgress(true);\n    console.log('RegisterPage: Attempting password registration with data:', {\n      email,\n      password,\n      name\n    });\n    try {\n      const res = await api.post('/auth/register/password', {\n        email,\n        password,\n        name\n      });\n      console.log('Register success:', res.data);\n      const {\n        user\n      } = res.data;\n      localStorage.setItem('userName', user.name);\n      localStorage.setItem('isAdmin', user.is_admin ? 'true' : 'false');\n      localStorage.setItem('userId', user.id);\n\n      // Перенаправляємо на сторінку логіну після успішної реєстрації\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error('Registration error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      alert('Помилка реєстрації: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n    } finally {\n      setRegisterInProgress(false);\n    }\n  };\n  const handleGoogleRegister = async () => {\n    setRegisterInProgress(true);\n    console.log('RegisterPage: Initiating Google sign-in popup for registration.');\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      const token = await result.user.getIdToken();\n      console.log('RegisterPage: Sending Google token to backend /auth/register/google (assuming endpoint exists)...');\n      const res = await api.post('/auth/register/google', {\n        token\n      }, {\n        withCredentials: true\n      });\n      console.log('Google registration success:', res.data);\n      const {\n        user\n      } = res.data;\n      localStorage.setItem('userName', user.name);\n      localStorage.setItem('isAdmin', user.is_admin ? 'true' : 'false');\n      localStorage.setItem('userId', user.id);\n\n      // Перенаправляємо після успішної реєстрації через Google\n      // Можливо, варто перенаправляти на головну або панель користувача, а не на логін?\n      // navigate('/home'); // Приклад перенаправлення на іншу сторінку\n      navigate('/login'); // Або на сторінку логіну, якщо це логіка вашого застосунку\n    } catch (error) {\n      console.error('Google registration error:', error);\n      alert('Помилка авторизації через Google');\n    } finally {\n      setRegisterInProgress(false);\n    }\n  };\n\n  // Функція для переходу на сторінку логіну\n  const switchToLogin = () => {\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"register\",\n    onSubmit: handleRegister,\n    onGoogleLogin: handleGoogleRegister,\n    isSubmitting: registerInProgress,\n    onSwitchType: switchToLogin // Передаємо функцію переходу\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"ZaiNOkPZp47JHY/iAOUV9AthnFo=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","AuthForm","api","useNavigate","signInWithPopup","auth","googleProvider","jsxDEV","_jsxDEV","RegisterPage","_s","navigate","registerInProgress","setRegisterInProgress","handleRegister","email","password","name","console","log","res","post","data","user","localStorage","setItem","is_admin","id","err","_err$response","_err$response2","_err$response2$data","error","response","message","alert","handleGoogleRegister","result","token","getIdToken","withCredentials","switchToLogin","type","onSubmit","onGoogleLogin","isSubmitting","onSwitchType","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AuthForm from '../components/AuthForm';\r\nimport api from '../utils/api';\r\nimport { useNavigate } from 'react-router-dom'; // Імпортуємо useNavigate\r\nimport { signInWithPopup } from \"firebase/auth\";\r\nimport { auth, googleProvider } from \"../firebase\";\r\n\r\nexport default function RegisterPage() {\r\n    const navigate = useNavigate(); // Отримуємо функцію навігації\r\n    const [registerInProgress, setRegisterInProgress] = useState(false);\r\n\r\n\r\n    const handleRegister = async ({ email, password, name }) => {\r\n        setRegisterInProgress(true);\r\n        console.log('RegisterPage: Attempting password registration with data:', { email, password, name });\r\n        try {\r\n            const res = await api.post('/auth/register/password', { email, password, name });\r\n            console.log('Register success:', res.data);\r\n            const { user } = res.data;\r\n            localStorage.setItem('userName', user.name);\r\n            localStorage.setItem('isAdmin', user.is_admin ? 'true' : 'false');\r\n            localStorage.setItem('userId', user.id);\r\n\r\n            // Перенаправляємо на сторінку логіну після успішної реєстрації\r\n            navigate('/login');\r\n\r\n        } catch (err) {\r\n            console.error('Registration error:', err.response?.data || err.message);\r\n            alert('Помилка реєстрації: ' + (err.response?.data?.message || err.message));\r\n        } finally {\r\n            setRegisterInProgress(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleGoogleRegister = async () => {\r\n        setRegisterInProgress(true);\r\n        console.log('RegisterPage: Initiating Google sign-in popup for registration.');\r\n        try {\r\n            const result = await signInWithPopup(auth, googleProvider);\r\n            const token = await result.user.getIdToken();\r\n\r\n            console.log('RegisterPage: Sending Google token to backend /auth/register/google (assuming endpoint exists)...');\r\n            const res = await api.post('/auth/register/google', { token }, { withCredentials: true });\r\n\r\n            console.log('Google registration success:', res.data);\r\n            const { user } = res.data;\r\n            localStorage.setItem('userName', user.name);\r\n            localStorage.setItem('isAdmin', user.is_admin ? 'true' : 'false');\r\n            localStorage.setItem('userId', user.id);\r\n\r\n            // Перенаправляємо після успішної реєстрації через Google\r\n            // Можливо, варто перенаправляти на головну або панель користувача, а не на логін?\r\n            // navigate('/home'); // Приклад перенаправлення на іншу сторінку\r\n            navigate('/login'); // Або на сторінку логіну, якщо це логіка вашого застосунку\r\n\r\n        } catch (error) {\r\n            console.error('Google registration error:', error);\r\n            alert('Помилка авторизації через Google');\r\n        } finally {\r\n            setRegisterInProgress(false);\r\n        }\r\n    };\r\n\r\n    // Функція для переходу на сторінку логіну\r\n    const switchToLogin = () => {\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <AuthForm\r\n            type=\"register\"\r\n            onSubmit={handleRegister}\r\n            onGoogleLogin={handleGoogleRegister}\r\n            isSubmitting={registerInProgress}\r\n            onSwitchType={switchToLogin} // Передаємо функцію переходу\r\n        />\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}