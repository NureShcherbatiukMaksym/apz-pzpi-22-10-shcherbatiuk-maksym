{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\utils\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// components/ProtectedRoute.js\nimport React, { useContext } from 'react'; // useContext вже було, просто підтверджуємо\nimport { Navigate, useLocation } from 'react-router-dom'; // Додано useLocation\nimport { UserContext } from '../contexts/UserContext';\n\n// Проп children вже існує, тому не потрібно його оголошувати в ({ children })\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    hasDevice,\n    loading,\n    error\n  } = useContext(UserContext);\n  const location = useLocation(); // Отримуємо поточне місцезнаходження\n\n  // 1. Якщо дані ще завантажуються, можна показати індикатор завантаження\n  // Або просто повернути null, якщо батьківський компонент (наприклад, Layout/Dashboard)\n  // вже має логіку для відображення завантаження на основі loading\n  if (loading) {\n    // Можна повернути компонент завантаження або null\n    // return <div>Завантаження...</div>; // Приклад індикатора\n    return null; // Або нічого не рендерити, поки завантажується\n  }\n\n  // 2. Якщо користувача немає (не авторизований або помилка завантаження)\n  // Використовуємо state, щоб після логіну повернутись на сторінку, з якої намагались отримати доступ\n  if (!user) {\n    console.log('ProtectedRoute: Користувач не авторизований. Перенаправлення на /login.');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 3. Якщо користувач авторизований, але не має пристроїв\n  // Перенаправляємо на спеціальну сторінку для покупки/додавання пристрою\n  // !!!ВАЖЛИВО!!! Переконайтеся, що шлях '/get-device' не захищений цим же ProtectedRoute,\n  // інакше отримаєте нескінченний цикл редиректів.\n  if (!hasDevice) {\n    console.log('ProtectedRoute: Користувач не має пристроїв. Перенаправлення на /get-device.');\n    // Передаємо state, щоб на сторінці /get-device можна було пояснити, чому користувач тут опинився\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        reason: 'no-device'\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 4. Якщо користувач авторизований і має пристрої - рендеримо дочірні елементи (захищений контент)\n  console.log('ProtectedRoute: Доступ дозволено.');\n  return children;\n};\n_s(ProtectedRoute, \"+LcWZd6mCjJq+lmNesCDZZHSceg=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","UserContext","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","hasDevice","loading","error","location","console","log","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","reason","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/utils/PrivateRoute.js"],"sourcesContent":["// components/ProtectedRoute.js\r\nimport React, { useContext } from 'react'; // useContext вже було, просто підтверджуємо\r\nimport { Navigate, useLocation } from 'react-router-dom'; // Додано useLocation\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\n// Проп children вже існує, тому не потрібно його оголошувати в ({ children })\r\nconst ProtectedRoute = ({ children }) => {\r\n    const { user, hasDevice, loading, error } = useContext(UserContext);\r\n    const location = useLocation(); // Отримуємо поточне місцезнаходження\r\n\r\n    // 1. Якщо дані ще завантажуються, можна показати індикатор завантаження\r\n    // Або просто повернути null, якщо батьківський компонент (наприклад, Layout/Dashboard)\r\n    // вже має логіку для відображення завантаження на основі loading\r\n    if (loading) {\r\n        // Можна повернути компонент завантаження або null\r\n        // return <div>Завантаження...</div>; // Приклад індикатора\r\n        return null; // Або нічого не рендерити, поки завантажується\r\n    }\r\n\r\n    // 2. Якщо користувача немає (не авторизований або помилка завантаження)\r\n    // Використовуємо state, щоб після логіну повернутись на сторінку, з якої намагались отримати доступ\r\n    if (!user) {\r\n        console.log('ProtectedRoute: Користувач не авторизований. Перенаправлення на /login.');\r\n        return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n    }\r\n\r\n    // 3. Якщо користувач авторизований, але не має пристроїв\r\n    // Перенаправляємо на спеціальну сторінку для покупки/додавання пристрою\r\n    // !!!ВАЖЛИВО!!! Переконайтеся, що шлях '/get-device' не захищений цим же ProtectedRoute,\r\n    // інакше отримаєте нескінченний цикл редиректів.\r\n    if (!hasDevice) {\r\n        console.log('ProtectedRoute: Користувач не має пристроїв. Перенаправлення на /get-device.');\r\n        // Передаємо state, щоб на сторінці /get-device можна було пояснити, чому користувач тут опинився\r\n        return <Navigate to=\"/login\" state={{ reason: 'no-device' }} replace />;\r\n    }\r\n\r\n    // 4. Якщо користувач авторизований і має пристрої - рендеримо дочірні елементи (захищений контент)\r\n    console.log('ProtectedRoute: Доступ дозволено.');\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO,CAAC,CAAC;AAC3C,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAC1D,SAASC,WAAW,QAAQ,yBAAyB;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EACnE,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA;EACA;EACA,IAAIS,OAAO,EAAE;IACT;IACA;IACA,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA;EACA;EACA,IAAI,CAACF,IAAI,EAAE;IACPK,OAAO,CAACC,GAAG,CAAC,yEAAyE,CAAC;IACtF,oBAAOV,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEL;MAAS,CAAE;MAACM,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtE;;EAEA;EACA;EACA;EACA;EACA,IAAI,CAACb,SAAS,EAAE;IACZI,OAAO,CAACC,GAAG,CAAC,8EAA8E,CAAC;IAC3F;IACA,oBAAOV,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEO,MAAM,EAAE;MAAY,CAAE;MAACL,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3E;;EAEA;EACAT,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAChD,OAAOR,QAAQ;AACnB,CAAC;AAACC,EAAA,CAjCIF,cAAc;EAAA,QAECJ,WAAW;AAAA;AAAAuB,EAAA,GAF1BnB,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}