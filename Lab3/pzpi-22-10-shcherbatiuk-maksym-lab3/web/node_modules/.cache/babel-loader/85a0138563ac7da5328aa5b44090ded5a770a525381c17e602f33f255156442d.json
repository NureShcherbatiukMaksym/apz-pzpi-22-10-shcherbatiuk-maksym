{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../utils/api';\nimport { useUserContext } from '../contexts/UserContext';\nimport { useTranslation } from \"react-i18next\"; // Для оновлення контексту\n// Імпортуйте useNavigate, якщо ви його використовуєте для перенаправлення при неаутентифікації\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  // Отримуємо користувача з контексту для початкової перевірки та можливого початкового стану\n  const {\n    user: userFromContext,\n    handleLoginSuccess\n  } = useUserContext();\n  const {\n    t\n  } = useTranslation();\n  const [user, setUser] = useState(null);\n\n  // Локальні стани для полів форми\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // Ймовірно, email не редагується\n\n  const [hasPassword, setHasPassword] = useState(false); // Чи є пароль для зміни\n\n  const [profilePicture, setProfilePicture] = useState(null);\n\n  // Локальні стани для полів зміни пароля\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPasswordState] = useState(\"\");\n  const [confirmPassword, setConfirmPasswordState] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // Повідомлення про статус (успіх/помилка)\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        console.log(\"Profile: Fetching user data for profile page...\");\n        // Викликає ендпоінт /users/me, який має повернути ПОВНИЙ об'єкт користувача\n        const res = await api.get('/users/me'); // Використовуйте шлях відносно baseURL з api.js\n        const userData = res.data.user || res.data; // Адаптуйте, якщо дані не вкладені у .user\n\n        console.log(\"Profile: Fetched user data:\", userData);\n\n        // Встановлює локальний стан користувача цими даними\n        setUser(userData);\n        setName(userData.name || \"\"); // Fallback для безпеки\n        setEmail(userData.email || \"\"); // Fallback для безпеки\n\n        // Перевіряємо, чи користувач має пароль (для відображення секції зміни пароля)\n        setHasPassword(!!userData.password); // !! перетворює в булеве (true, якщо password не null/undefined/порожній рядок/0)\n      } catch (error) {\n        var _error$response, _error$response$data, _error$response2, _error$response2$data;\n        console.error(\"Profile: Помилка завантаження профілю:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n        setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Помилка завантаження профілю.\");\n        setUser(null); // Скидаємо user стан при помилці завантаження\n      }\n    };\n    fetchUser();\n  }, []); // Порожній масив залежностей - ефект виконується один раз при монтуванні\n\n  // --- Обробник зміни файлу (обрано файл для завантаження) ---\n  const handleFileSelect = e => {\n    const file = e.target.files ? e.target.files[0] : null;\n    setProfilePicture(file);\n    setMessage(\"\"); // Очищаємо повідомлення\n    console.log(\"Profile: File selected for upload:\", file);\n  };\n\n  // --- Обробник збереження змін профілю ---\n  const handleSave = async e => {\n    e.preventDefault();\n\n    // Перевіряємо, що дані користувача завантажено локально перед збереженням\n    if (!user || !user.id) {\n      setMessage(\"Помилка: Дані користувача не завантажено. Спробуйте оновити сторінку.\");\n      return;\n    }\n    if (!validateForm()) return; // Валідуємо форму\n    setMessage(\"Збереження...\"); // Статус: збереження\n\n    try {\n      const formData = new FormData();\n      if (name !== user.name) formData.append(\"name\", name); // Додаємо ім'я, якщо змінилося\n\n      if (profilePicture) {\n        console.log(\"Profile: Appending file to FormData with key 'profilePictureFile'.\");\n        formData.append(\"profile_picture\", profilePicture); // Використовуємо ім'я поля з бекенду: 'profile_picture'\n      }\n\n      // Додаємо поля пароля, якщо вони заповнені (поточний пароль потрібен для зміни)\n      if (currentPassword) formData.append(\"currentPassword\", currentPassword);\n      if (newPassword) formData.append(\"newPassword\", newPassword);\n      console.log(`Profile: Sending update request for user ${user.id} with FormData.`);\n      // Відправляємо запит PUT до бекенду з FormData\n      const res = await api.put(`/users/${user.id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        } // Важливо для FormData\n      });\n\n      // Бекенд має повернути ОНОВЛЕНИЙ об'єкт користувача, включаючи новий profile_picture_url\n      const updatedUserData = res.data.user || res.data; // Адаптуйте, якщо дані не вкладені у .user\n      console.log(\"Profile: User updated successfully. Received updated data:\", updatedUserData);\n\n      // Оновлюємо ЛОКАЛЬНИЙ стан користувача свіжими даними з бекенду\n      setUser(updatedUserData);\n      // Оновлюємо локальні стани полів форми, якщо вони могли бути змінені на бекенді (напр., ім'я)\n      setName(updatedUserData.name || \"\");\n      // setEmail(updatedUserData.email || \"\"); // Якщо email можна змінювати\n\n      setMessage(\"Зміни успішно збережено.\");\n      if (handleLoginSuccess) {\n        // Перевіряємо, чи handleLoginSuccess доступна\n        console.log(\"Profile: Calling handleLoginSuccess to update UserContext with updated data.\");\n        // handleLoginSuccess оновлює стан контексту та localStorage\n        handleLoginSuccess(updatedUserData);\n      } else {\n        console.warn(\"Profile: handleLoginSuccess not available in context. UserMenu might not update.\");\n      }\n\n      // Очищаємо поля пароля та стан обраного файлу після успішного збереження\n      setCurrentPassword(\"\");\n      setNewPasswordState(\"\");\n      setConfirmPasswordState(\"\");\n      setProfilePicture(null); // Скидаємо обраний файл\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error(\"Profile: Error saving profile:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n      setMessage(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Помилка збереження змін.\");\n    }\n  };\n\n  // --- Обробники змін для полів форми ---\n  const handleNameChange = e => {\n    setName(e.target.value);\n    setMessage(\"\");\n  };\n  const handleCurrentPasswordChange = e => {\n    setCurrentPassword(e.target.value);\n    setMessage(\"\");\n  };\n  const handleNewPasswordChange = e => {\n    setNewPasswordState(e.target.value);\n    setMessage(\"\");\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPasswordState(e.target.value);\n    setMessage(\"\");\n  };\n  // handleFileSelect визначено вище\n\n  // Якщо user ще не завантажений, показуємо індикатор\n  if (!user) {\n    // TODO: Можна додати перевірку loadingInitial з контексту\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0434\\u0430\\u043D\\u0438\\u0445 \\u043F\\u0440\\u043E\\u0444\\u0456\\u043B\\u044E...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this);\n  }\n  // --- Функція валідації форми ---\n  const validateForm = () => {\n    setMessage(\"\"); // Очищаємо попередні повідомлення про помилки\n\n    // Валідація паролів, якщо вони змінюються\n    if ((newPassword || confirmPassword) && !currentPassword) {\n      setMessage(\"Будь ласка, введіть поточний пароль для зміни пароля.\");\n      return false;\n    }\n    if (newPassword && newPassword !== confirmPassword) {\n      setMessage(\"Новий пароль та підтвердження пароля не співпадають.\");\n      return false;\n    }\n\n    // TODO: Додати інші правила валідації за необхідності (наприклад, мінімальна довжина пароля, формат email, розмір файлу)\n\n    // Якщо все добре\n    return true;\n  };\n  // Якщо user завантажений, рендеримо форму\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full md:w-2/3 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: t('my_acc')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSave,\n      className: \"space-y-4\",\n      encType: \"multipart/form-data\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium text-gray-700 mb-1\",\n          children: t('profile_photo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileSelect,\n          className: \"w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), profilePicture ?\n        /*#__PURE__*/\n        // Якщо обрано новий файл - показуємо його попередній перегляд\n        _jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: t('preview_photo')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(profilePicture),\n            alt: t('preview_photo'),\n            className: \"w-24 h-24 rounded-full object-cover border border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this) :\n        // Якщо новий файл НЕ обрано, але є URL поточного фото в стані user - показуємо його\n        user.profile_picture_url && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: t('current_photo')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000${user.profile_picture_url}`,\n            alt: user !== null && user !== void 0 && user.name ? `${t('current_photo')} ${user.name}` : t('current_photo'),\n            className: \"w-24 h-24 rounded-full object-cover border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium text-gray-700 mb-1\",\n          children: t('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email // Використовуємо email з локального стану\n          ,\n          disabled: true // Припускаємо, що email не редагується\n          ,\n          className: \"w-full px-4 py-2 border border-gray-300 rounded bg-gray-100 cursor-not-allowed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium text-gray-700 mb-1\",\n          children: t('first_name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name // Використовуємо ім'я з локального стану\n          ,\n          onChange: handleNameChange // Використовуємо обробник зміни\n          ,\n          className: \"w-full px-4 py-2 border border-gray-300 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), user.password !== undefined && user.password !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: t('password_change')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block font-medium text-gray-700 mb-1\",\n            children: t('current_password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: currentPassword,\n            onChange: handleCurrentPasswordChange,\n            className: \"w-full px-4 py-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block font-medium text-gray-700 mb-1\",\n            children: t('new_password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: newPassword,\n            onChange: handleNewPasswordChange,\n            className: \"w-full px-4 py-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block font-medium text-gray-700 mb-1\",\n            children: t('confirm_password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: handleConfirmPasswordChange,\n            className: \"w-full px-4 py-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // Опціонально: Показати секцію для встановлення пароля, якщо його немає\n      _jsxDEV(\"div\", {\n        className: \"mt-4 text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('password_message')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-blue-600\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 transition\",\n        children: t('save_changes')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"SnjIFb8imynZpAPjPf1gbR+fAlg=\", false, function () {\n  return [useUserContext, useTranslation];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","api","useUserContext","useTranslation","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","user","userFromContext","handleLoginSuccess","t","setUser","name","setName","email","setEmail","hasPassword","setHasPassword","profilePicture","setProfilePicture","currentPassword","setCurrentPassword","newPassword","setNewPasswordState","confirmPassword","setConfirmPasswordState","message","setMessage","fetchUser","console","log","res","get","userData","data","password","error","_error$response","_error$response$data","_error$response2","_error$response2$data","response","handleFileSelect","e","file","target","files","handleSave","preventDefault","id","validateForm","formData","FormData","append","put","headers","updatedUserData","warn","err","_err$response","_err$response$data","_err$response2","_err$response2$data","handleNameChange","value","handleCurrentPasswordChange","handleNewPasswordChange","handleConfirmPasswordChange","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","encType","type","accept","onChange","src","URL","createObjectURL","alt","profile_picture_url","disabled","undefined","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../utils/api';\r\nimport { useUserContext } from '../contexts/UserContext';\r\nimport {useTranslation} from \"react-i18next\"; // Для оновлення контексту\r\n// Імпортуйте useNavigate, якщо ви його використовуєте для перенаправлення при неаутентифікації\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Profile = () => {\r\n    // Отримуємо користувача з контексту для початкової перевірки та можливого початкового стану\r\n    const { user: userFromContext, handleLoginSuccess } = useUserContext();\r\n    const { t } = useTranslation();\r\n\r\n    const [user, setUser] = useState(null);\r\n\r\n    // Локальні стани для полів форми\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\"); // Ймовірно, email не редагується\r\n\r\n    const [hasPassword, setHasPassword] = useState(false); // Чи є пароль для зміни\r\n\r\n    const [profilePicture, setProfilePicture] = useState(null);\r\n\r\n    // Локальні стани для полів зміни пароля\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPasswordState] = useState(\"\");\r\n    const [confirmPassword, setConfirmPasswordState] = useState(\"\");\r\n\r\n    const [message, setMessage] = useState(\"\"); // Повідомлення про статус (успіх/помилка)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                console.log(\"Profile: Fetching user data for profile page...\");\r\n                // Викликає ендпоінт /users/me, який має повернути ПОВНИЙ об'єкт користувача\r\n                const res = await api.get('/users/me'); // Використовуйте шлях відносно baseURL з api.js\r\n                const userData = res.data.user || res.data; // Адаптуйте, якщо дані не вкладені у .user\r\n\r\n                console.log(\"Profile: Fetched user data:\", userData);\r\n\r\n                // Встановлює локальний стан користувача цими даними\r\n                setUser(userData);\r\n                setName(userData.name || \"\"); // Fallback для безпеки\r\n                setEmail(userData.email || \"\"); // Fallback для безпеки\r\n\r\n                // Перевіряємо, чи користувач має пароль (для відображення секції зміни пароля)\r\n                setHasPassword(!!userData.password); // !! перетворює в булеве (true, якщо password не null/undefined/порожній рядок/0)\r\n\r\n\r\n            } catch (error) {\r\n                console.error(\"Profile: Помилка завантаження профілю:\", error.response?.data?.message || error.message);\r\n                setMessage(error.response?.data?.message || \"Помилка завантаження профілю.\");\r\n                setUser(null); // Скидаємо user стан при помилці завантаження\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n\r\n\r\n    }, []); // Порожній масив залежностей - ефект виконується один раз при монтуванні\r\n\r\n\r\n    // --- Обробник зміни файлу (обрано файл для завантаження) ---\r\n    const handleFileSelect = (e) => {\r\n        const file = e.target.files ? e.target.files[0] : null;\r\n        setProfilePicture(file);\r\n        setMessage(\"\"); // Очищаємо повідомлення\r\n        console.log(\"Profile: File selected for upload:\", file);\r\n    }\r\n\r\n\r\n    // --- Обробник збереження змін профілю ---\r\n    const handleSave = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Перевіряємо, що дані користувача завантажено локально перед збереженням\r\n        if (!user || !user.id) {\r\n            setMessage(\"Помилка: Дані користувача не завантажено. Спробуйте оновити сторінку.\");\r\n            return;\r\n        }\r\n\r\n        if (!validateForm()) return; // Валідуємо форму\r\n        setMessage(\"Збереження...\"); // Статус: збереження\r\n\r\n        try {\r\n            const formData = new FormData();\r\n\r\n            if (name !== user.name) formData.append(\"name\", name); // Додаємо ім'я, якщо змінилося\r\n\r\n            if (profilePicture) {\r\n                console.log(\"Profile: Appending file to FormData with key 'profilePictureFile'.\");\r\n                formData.append(\"profile_picture\", profilePicture); // Використовуємо ім'я поля з бекенду: 'profile_picture'\r\n            }\r\n\r\n            // Додаємо поля пароля, якщо вони заповнені (поточний пароль потрібен для зміни)\r\n            if (currentPassword) formData.append(\"currentPassword\", currentPassword);\r\n            if (newPassword) formData.append(\"newPassword\", newPassword);\r\n\r\n\r\n            console.log(`Profile: Sending update request for user ${user.id} with FormData.`);\r\n            // Відправляємо запит PUT до бекенду з FormData\r\n            const res = await api.put(`/users/${user.id}`, formData, {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }, // Важливо для FormData\r\n            });\r\n\r\n            // Бекенд має повернути ОНОВЛЕНИЙ об'єкт користувача, включаючи новий profile_picture_url\r\n            const updatedUserData = res.data.user || res.data; // Адаптуйте, якщо дані не вкладені у .user\r\n            console.log(\"Profile: User updated successfully. Received updated data:\", updatedUserData);\r\n\r\n            // Оновлюємо ЛОКАЛЬНИЙ стан користувача свіжими даними з бекенду\r\n            setUser(updatedUserData);\r\n            // Оновлюємо локальні стани полів форми, якщо вони могли бути змінені на бекенді (напр., ім'я)\r\n            setName(updatedUserData.name || \"\");\r\n            // setEmail(updatedUserData.email || \"\"); // Якщо email можна змінювати\r\n\r\n            setMessage(\"Зміни успішно збережено.\");\r\n\r\n            if (handleLoginSuccess) { // Перевіряємо, чи handleLoginSuccess доступна\r\n                console.log(\"Profile: Calling handleLoginSuccess to update UserContext with updated data.\");\r\n                // handleLoginSuccess оновлює стан контексту та localStorage\r\n                handleLoginSuccess(updatedUserData);\r\n            } else {\r\n                console.warn(\"Profile: handleLoginSuccess not available in context. UserMenu might not update.\");\r\n\r\n            }\r\n\r\n\r\n            // Очищаємо поля пароля та стан обраного файлу після успішного збереження\r\n            setCurrentPassword(\"\");\r\n            setNewPasswordState(\"\");\r\n            setConfirmPasswordState(\"\");\r\n            setProfilePicture(null); // Скидаємо обраний файл\r\n\r\n\r\n        } catch (err) {\r\n            console.error(\"Profile: Error saving profile:\", err.response?.data?.message || err.message);\r\n            setMessage(err.response?.data?.message || \"Помилка збереження змін.\");\r\n        }\r\n    };\r\n\r\n\r\n    // --- Обробники змін для полів форми ---\r\n    const handleNameChange = (e) => { setName(e.target.value); setMessage(\"\"); }\r\n    const handleCurrentPasswordChange = (e) => { setCurrentPassword(e.target.value); setMessage(\"\"); }\r\n    const handleNewPasswordChange = (e) => { setNewPasswordState(e.target.value); setMessage(\"\"); }\r\n    const handleConfirmPasswordChange = (e) => { setConfirmPasswordState(e.target.value); setMessage(\"\"); }\r\n    // handleFileSelect визначено вище\r\n\r\n\r\n    // Якщо user ще не завантажений, показуємо індикатор\r\n    if (!user) {\r\n        // TODO: Можна додати перевірку loadingInitial з контексту\r\n\r\n        return <p>Завантаження даних профілю...</p>;\r\n    }\r\n    // --- Функція валідації форми ---\r\n    const validateForm = () => {\r\n        setMessage(\"\"); // Очищаємо попередні повідомлення про помилки\r\n\r\n        // Валідація паролів, якщо вони змінюються\r\n        if ((newPassword || confirmPassword) && !currentPassword) {\r\n            setMessage(\"Будь ласка, введіть поточний пароль для зміни пароля.\");\r\n            return false;\r\n        }\r\n\r\n        if (newPassword && newPassword !== confirmPassword) {\r\n            setMessage(\"Новий пароль та підтвердження пароля не співпадають.\");\r\n            return false;\r\n        }\r\n\r\n        // TODO: Додати інші правила валідації за необхідності (наприклад, мінімальна довжина пароля, формат email, розмір файлу)\r\n\r\n        // Якщо все добре\r\n        return true;\r\n    };\r\n    // Якщо user завантажений, рендеримо форму\r\n    return (\r\n        <div className=\"w-full md:w-2/3 p-6\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">{t('my_acc')}</h2>\r\n\r\n            <form onSubmit={handleSave} className=\"space-y-4\" encType=\"multipart/form-data\"> {/* encType обов'язковий для FormData з файлами */}\r\n                <div>\r\n                    <label className=\"block font-medium text-gray-700 mb-1\">{t('profile_photo')}</label>\r\n                    {/* Input для вибору файлу */}\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleFileSelect}\r\n                        className=\"w-full\"\r\n                    />\r\n\r\n                    {profilePicture ? (\r\n                        // Якщо обрано новий файл - показуємо його попередній перегляд\r\n                        <div className=\"mt-2\">\r\n                            <p className=\"text-sm text-gray-600\">{t('preview_photo')}</p>\r\n                            <img\r\n                                src={URL.createObjectURL(profilePicture)}\r\n                                alt={t('preview_photo')}\r\n                                className=\"w-24 h-24 rounded-full object-cover border border-blue-500\"\r\n                            />\r\n                            {/* TODO: Додати useEffect Cleanup для відкликання ObjectURL */}\r\n                        </div>\r\n                    ) : (\r\n                        // Якщо новий файл НЕ обрано, але є URL поточного фото в стані user - показуємо його\r\n                        user.profile_picture_url && (\r\n                            <div className=\"mt-2\">\r\n                                <p className=\"text-sm text-gray-600\">{t('current_photo')}</p>\r\n                                <img\r\n\r\n                                    src={`http://localhost:5000${user.profile_picture_url}`}\r\n                                    alt={user?.name ? `${t('current_photo')} ${user.name}` : t('current_photo')}\r\n                                    className=\"w-24 h-24 rounded-full object-cover border border-gray-300\"\r\n                                />\r\n                                {/* TODO: Додати кнопку \"Видалити фото профілю\" */}\r\n                            </div>\r\n                        )\r\n                    )}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                {/* Секція Email (якщо не редагується) */}\r\n                <div>\r\n                    <label className=\"block font-medium text-gray-700 mb-1\">{t('email')}</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={email} // Використовуємо email з локального стану\r\n                        disabled // Припускаємо, що email не редагується\r\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded bg-gray-100 cursor-not-allowed\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Секція Ім'я */}\r\n                <div>\r\n                    <label className=\"block font-medium text-gray-700 mb-1\">{t('first_name')}</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name} // Використовуємо ім'я з локального стану\r\n                        onChange={handleNameChange} // Використовуємо обробник зміни\r\n                        className=\"w-full px-4 py-2 border border-gray-300 rounded\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Секція зміни пароля (відображаємо, якщо user має пароль) */}\r\n                {/* Перевіряємо наявність поля 'password' у об'єкті користувача, отриманому з бекенду */}\r\n                {user.password !== undefined && user.password !== null ? (\r\n                    <>\r\n                        <hr className=\"my-4\" />\r\n                        <h3 className=\"text-lg font-semibold\">{t('password_change')}</h3>\r\n\r\n                        <div>\r\n                            <label className=\"block font-medium text-gray-700 mb-1\">{t('current_password')}</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={currentPassword}\r\n                                onChange={handleCurrentPasswordChange}\r\n                                className=\"w-full px-4 py-2 border border-gray-300 rounded\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block font-medium text-gray-700 mb-1\">{t('new_password')}</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={newPassword}\r\n                                onChange={handleNewPasswordChange}\r\n                                className=\"w-full px-4 py-2 border border-gray-300 rounded\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block font-medium text-gray-700 mb-1\">{t('confirm_password')}</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={confirmPassword}\r\n                                onChange={handleConfirmPasswordChange}\r\n                                className=\"w-full px-4 py-2 border border-gray-300 rounded\"\r\n                            />\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    // Опціонально: Показати секцію для встановлення пароля, якщо його немає\r\n                    <div className=\"mt-4 text-gray-600\">\r\n                        <p>{t('password_message')}</p> {/* TODO: Реалізувати функціонал додавання пароля */}\r\n                    </div>\r\n                )}\r\n\r\n\r\n                {message && <p className=\"text-sm text-blue-600\">{message}</p>}\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 transition\"\r\n                >\r\n                    {t('save_changes')}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}