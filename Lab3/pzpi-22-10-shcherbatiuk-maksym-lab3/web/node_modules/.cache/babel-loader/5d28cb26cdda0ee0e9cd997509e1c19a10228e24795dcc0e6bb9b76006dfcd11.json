{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\AnalyticsField.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../utils/api';\nimport Chartist from 'chartist';\nimport 'chartist/dist/chartist.min.css';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyticsField = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [timeRange, setTimeRange] = useState('7d');\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const chartContainerRef = useRef(null);\n  const selectField = useCallback(async fieldId => {\n    if (!fieldId) return;\n    try {\n      await api.post('/fields/select/', {\n        fieldId\n      });\n    } catch (err) {\n      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –ø–æ–ª—è:', err);\n      throw err;\n    }\n  }, []);\n  const deselectField = useCallback(async fieldId => {\n    if (!fieldId) return;\n    try {\n      await api.post('/fields/deselect/', {\n        fieldId\n      });\n    } catch (err) {\n      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–µ—Å–µ–ª–µ–∫—Ç—ñ –ø–æ–ª—è:', err);\n    }\n  }, []);\n\n  // –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –ø–æ–ª—è (1 —Ä–∞–∑)\n  useEffect(() => {\n    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –≥—Ä–∞—Ñ—ñ–∫—ñ–≤\n    const clearCharts = () => {\n      Object.values(chartInstancesRef.current).forEach(chart => {\n        if (chart && typeof chart.detach === 'function') {\n          chart.detach();\n        }\n      });\n      chartInstancesRef.current = {};\n\n      // –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –æ—á–∏—Å—Ç–∏—Ç–∏ HTML –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤, —è–∫—â–æ detach –Ω–µ –∑–∞–≤–∂–¥–∏ —Å–ø—Ä–∞—Ü—å–æ–≤—É—î —ñ–¥–µ–∞–ª—å–Ω–æ\n      // –∞–±–æ —è–∫—â–æ Chartist –∑–∞–ª–∏—à–∞—î —è–∫—ñ—Å—å –µ–ª–µ–º–µ–Ω—Ç–∏\n      const overallChartEl = document.getElementById('overall-chart');\n      if (overallChartEl) overallChartEl.innerHTML = '';\n      if (chartData && chartData.aggregatedData) {\n        // chartData —Ç—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–º, —è–∫—â–æ –µ—Ñ–µ–∫—Ç —Å–ø—Ä–∞—Ü—é–≤–∞–≤ —á–µ—Ä–µ–∑ –∑–º—ñ–Ω—É error\n        chartData.aggregatedData.forEach(sensor => {\n          const sensorChartEl = document.getElementById(`chart-${sensor.sensorId}`);\n          if (sensorChartEl) sensorChartEl.innerHTML = '';\n        });\n      } else if (isLoading) {\n        var _initialChartData$agg;\n        // –Ø–∫—â–æ –π–¥–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ chartData —â–µ –Ω–µ–º–∞—î –∞–±–æ null\n        const initialChartData = chartData; // –∑–±–µ—Ä–µ–≥—Ç–∏ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è chartData (–º–æ–∂–µ –±—É—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–º)\n        initialChartData === null || initialChartData === void 0 ? void 0 : (_initialChartData$agg = initialChartData.aggregatedData) === null || _initialChartData$agg === void 0 ? void 0 : _initialChartData$agg.forEach(sensor => {\n          // —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –æ—á–∏—Å—Ç–∏—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–∏—Ö —Å—Ç–∞—Ä–∏—Ö –¥–∞–Ω–∏—Ö\n          const sensorChartEl = document.getElementById(`chart-${sensor.sensorId}`);\n          if (sensorChartEl) sensorChartEl.innerHTML = '';\n        });\n      }\n    };\n    if (isLoading || error || !chartData) {\n      // –Ø–∫—â–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, –ø–æ–º–∏–ª–∫–∞, –∞–±–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö\n      clearCharts();\n      if (!chartData || error) return; // –ù–µ –º–∞–ª—é–≤–∞—Ç–∏, —è–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –∞–±–æ —î –ø–æ–º–∏–ª–∫–∞\n    }\n\n    // –Ø–∫—â–æ –º–∏ –¥—ñ–π—à–ª–∏ —Å—é–¥–∏, isLoading=false, error=null, chartData —î\n    // –°–ø–æ—á–∞—Ç–∫—É –æ—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –ø–µ—Ä–µ–¥ –º–∞–ª—é–≤–∞–Ω–Ω—è–º –Ω–æ–≤–∏—Ö\n    clearCharts();\n\n    // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –ø–æ —Å–µ–Ω—Å–æ—Ä–∞—Ö\n    chartData.aggregatedData.forEach(sensor => {\n      const containerId = `chart-${sensor.sensorId}`;\n      // ... –ª–æ–≥—ñ–∫–∞ labels, values ...\n      const labels = sensor.data.map(/* ... */);\n      const values = sensor.data.map(/* ... */);\n      try {\n        // –î–æ–¥–∞–Ω–æ try-catch –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞\n        const newChart = new Chartist.Line(`#${containerId}`, {\n          labels,\n          series: [values]\n        }, {/* ... options ... */});\n        chartInstancesRef.current[containerId] = newChart;\n      } catch (e) {\n        console.error(`Failed to create chart for sensor ${sensor.sensorId}:`, e);\n      }\n    });\n\n    // –ó–∞–≥–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫\n    // ... –≤–∞—à–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è sensorTypesMap, allTimestamps, labels, series ...\n    try {\n      // –î–æ–¥–∞–Ω–æ try-catch\n      const overallChartInstance = new Chartist.Line('#overall-chart', {\n        labels,\n        // labels –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞\n        series // series –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞\n      }, {/* ... options ... */});\n      chartInstancesRef.current['overall-chart'] = overallChartInstance;\n    } catch (e) {\n      console.error(\"Failed to create overall chart:\", e);\n    }\n\n    // –§—É–Ω–∫—Ü—ñ—è –æ—á–∏—â–µ–Ω–Ω—è –¥–ª—è —Ü—å–æ–≥–æ useEffect (—Å–ø—Ä–∞—Ü—é—î –ø—Ä–∏ –∑–º—ñ–Ω—ñ chartData, error –∞–±–æ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ)\n    return () => {\n      clearCharts();\n    };\n  }, [chartData, error, isLoading, t]);\n\n  // –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ø–µ—Ä—ñ–æ–¥—É —á–∞—Å—É\n  useEffect(() => {\n    if (id) {\n      fetchData();\n    }\n  }, [timeRange]);\n  useEffect(() => {\n    if (!chartData || !chartContainerRef.current) return;\n\n    // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –ø–æ —Å–µ–Ω—Å–æ—Ä–∞—Ö\n    chartData.aggregatedData.forEach(sensor => {\n      const containerId = `chart-${sensor.sensorId}`;\n      const labels = sensor.data.map(entry => {\n        const date = new Date(entry.timestamp || entry.createdAt);\n        return `${date.getDate().toString().padStart(2, '0')}.${(date.getMonth() + 1).toString().padStart(2, '0')}`;\n      });\n      const values = sensor.data.map(entry => entry.value);\n      new Chartist.Line(`#${containerId}`, {\n        labels,\n        series: [values]\n      }, {\n        fullWidth: true,\n        chartPadding: {\n          right: 40\n        },\n        axisX: {\n          showGrid: false,\n          labelInterpolationFnc: (value, index) => index % 3 === 0 ? value : null\n        }\n      });\n    });\n\n    // üîµ –ó–∞–≥–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫\n    const sensorTypesMap = {};\n    chartData.aggregatedData.forEach(sensor => {\n      sensor.data.forEach(entry => {\n        const timeKey = new Date(entry.timestamp || entry.createdAt).toISOString().slice(0, 16); // –¥–æ —Ö–≤–∏–ª–∏–Ω\n        if (!sensorTypesMap[sensor.sensorType]) sensorTypesMap[sensor.sensorType] = {};\n        if (!sensorTypesMap[sensor.sensorType][timeKey]) {\n          sensorTypesMap[sensor.sensorType][timeKey] = [];\n        }\n        sensorTypesMap[sensor.sensorType][timeKey].push(entry.value);\n      });\n    });\n    const allTimestamps = Array.from(new Set(Object.values(sensorTypesMap).flatMap(typeData => Object.keys(typeData)))).sort();\n    const labels = allTimestamps.map(ts => {\n      const date = new Date(ts);\n      return `${date.getDate().toString().padStart(2, '0')}.${(date.getMonth() + 1).toString().padStart(2, '0')}`;\n    });\n    const series = Object.keys(sensorTypesMap).map(sensorType => {\n      return allTimestamps.map(ts => {\n        const values = sensorTypesMap[sensorType][ts];\n        if (!values || values.length === 0) return null;\n        const avg = values.reduce((sum, val) => sum + val, 0) / values.length;\n        return +avg.toFixed(2);\n      });\n    });\n    new Chartist.Line('#overall-chart', {\n      labels,\n      series\n    }, {\n      fullWidth: true,\n      chartPadding: {\n        right: 40\n      },\n      axisX: {\n        showGrid: false,\n        labelInterpolationFnc: (value, index) => index % 1 === 0 ? value : null\n      },\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 0.2\n      })\n    });\n  }, [chartData]);\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setChartData(null);\n    try {\n      const response = await api.get(`/field-measurements/chart/${timeRange}`);\n      setChartData(response.data);\n    } catch (err) {\n      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏:', err);\n      setError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeRange]);\n  const handleTimeRangeChange = range => {\n    if (range !== timeRange && !isLoading) {\n      setTimeRange(range);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-content\",\n    className: \"w-full flex-1 bg-gray-100 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded-lg p-4 md:p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center border-b border-gray-200 pb-3 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-xl font-bold text-gray-900\",\n            children: [\"\\u0410\\u043D\\u0430\\u043B\\u0456\\u0442\\u0438\\u043A\\u0430 \\u0432\\u0438\\u043C\\u0456\\u0440\\u044E\\u0432\\u0430\\u043D\\u044C \", id ? `–¥–ª—è –ø–æ–ª—è ID: ${id}` : '(–ü–æ–ª–µ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: ['7d', '6m', '1y'].map(range => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTimeRangeChange(range),\n              disabled: isLoading,\n              className: `px-3 py-1 text-sm font-medium rounded transition-colors duration-150 ease-in-out ${timeRange === range ? 'bg-blue-600 text-white hover:bg-blue-700' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'} ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`,\n              children: range.toUpperCase()\n            }, range, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-blue-600\",\n          children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0434\\u0430\\u043D\\u0438\\u0445...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 35\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 31\n        }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"font-semibold text-lg mb-2\",\n            children: t(`general_analytics`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"overall-chart\",\n            className: \"ct-chart ct-major-twelfth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"font-semibold text-lg mb-2\",\n            children: t(`aggregated_data`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: chartData.aggregatedData.map(sensor => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 bg-gray-50 rounded shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"font-bold\",\n                children: sensor.sensorType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Min:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 44\n                }, this), \" \", sensor.min]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Max:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 44\n                }, this), \" \", sensor.max]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Avg:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 44\n                }, this), \" \", sensor.average]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: `chart-${sensor.sensorId}`,\n                className: \"ct-chart ct-major-tenth mt-4\",\n                style: {\n                  height: '300px'\n                },\n                ref: chartContainerRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 41\n              }, this)]\n            }, sensor.sensorId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 9\n  }, this);\n};\n_s(AnalyticsField, \"1V8WzvVh5WrLRwtm+Lr3O2vhWdA=\", false, function () {\n  return [useParams, useTranslation];\n});\n_c = AnalyticsField;\nexport default AnalyticsField;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsField\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","useParams","api","Chartist","useTranslation","jsxDEV","_jsxDEV","AnalyticsField","_s","id","timeRange","setTimeRange","chartData","setChartData","isLoading","setIsLoading","error","setError","t","i18n","chartContainerRef","selectField","fieldId","post","err","console","deselectField","clearCharts","Object","values","chartInstancesRef","current","forEach","chart","detach","overallChartEl","document","getElementById","innerHTML","aggregatedData","sensor","sensorChartEl","sensorId","_initialChartData$agg","initialChartData","containerId","labels","data","map","newChart","Line","series","e","overallChartInstance","fetchData","entry","date","Date","timestamp","createdAt","getDate","toString","padStart","getMonth","value","fullWidth","chartPadding","right","axisX","showGrid","labelInterpolationFnc","index","sensorTypesMap","timeKey","toISOString","slice","sensorType","push","allTimestamps","Array","from","Set","flatMap","typeData","keys","sort","ts","length","avg","reduce","sum","val","toFixed","lineSmooth","Interpolation","cardinal","tension","response","get","handleTimeRangeChange","range","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toUpperCase","min","max","average","style","height","ref","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/AnalyticsField.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../utils/api';\r\nimport Chartist from 'chartist';\r\nimport 'chartist/dist/chartist.min.css';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst AnalyticsField = () => {\r\n    const { id } = useParams();\r\n    const [timeRange, setTimeRange] = useState('7d');\r\n    const [chartData, setChartData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const { t, i18n } = useTranslation();\r\n    const chartContainerRef = useRef(null);\r\n\r\n    const selectField = useCallback(async (fieldId) => {\r\n        if (!fieldId) return;\r\n        try {\r\n            await api.post('/fields/select/', { fieldId });\r\n        } catch (err) {\r\n            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –ø–æ–ª—è:', err);\r\n            throw err;\r\n        }\r\n    }, []);\r\n\r\n    const deselectField = useCallback(async (fieldId) => {\r\n        if (!fieldId) return;\r\n        try {\r\n            await api.post('/fields/deselect/', { fieldId });\r\n        } catch (err) {\r\n            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–µ—Å–µ–ª–µ–∫—Ç—ñ –ø–æ–ª—è:', err);\r\n        }\r\n    }, []);\r\n\r\n    // –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –ø–æ–ª—è (1 —Ä–∞–∑)\r\n    useEffect(() => {\r\n        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –≥—Ä–∞—Ñ—ñ–∫—ñ–≤\r\n        const clearCharts = () => {\r\n            Object.values(chartInstancesRef.current).forEach(chart => {\r\n                if (chart && typeof chart.detach === 'function') {\r\n                    chart.detach();\r\n                }\r\n            });\r\n            chartInstancesRef.current = {};\r\n\r\n            // –î–æ–¥–∞—Ç–∫–æ–≤–æ –º–æ–∂–Ω–∞ –æ—á–∏—Å—Ç–∏—Ç–∏ HTML –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤, —è–∫—â–æ detach –Ω–µ –∑–∞–≤–∂–¥–∏ —Å–ø—Ä–∞—Ü—å–æ–≤—É—î —ñ–¥–µ–∞–ª—å–Ω–æ\r\n            // –∞–±–æ —è–∫—â–æ Chartist –∑–∞–ª–∏—à–∞—î —è–∫—ñ—Å—å –µ–ª–µ–º–µ–Ω—Ç–∏\r\n            const overallChartEl = document.getElementById('overall-chart');\r\n            if (overallChartEl) overallChartEl.innerHTML = '';\r\n\r\n            if (chartData && chartData.aggregatedData) { // chartData —Ç—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–º, —è–∫—â–æ –µ—Ñ–µ–∫—Ç —Å–ø—Ä–∞—Ü—é–≤–∞–≤ —á–µ—Ä–µ–∑ –∑–º—ñ–Ω—É error\r\n                chartData.aggregatedData.forEach(sensor => {\r\n                    const sensorChartEl = document.getElementById(`chart-${sensor.sensorId}`);\r\n                    if (sensorChartEl) sensorChartEl.innerHTML = '';\r\n                });\r\n            } else if (isLoading) { // –Ø–∫—â–æ –π–¥–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ chartData —â–µ –Ω–µ–º–∞—î –∞–±–æ null\r\n                const initialChartData = chartData; // –∑–±–µ—Ä–µ–≥—Ç–∏ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è chartData (–º–æ–∂–µ –±—É—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–º)\r\n                initialChartData?.aggregatedData?.forEach(sensor => { // —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –æ—á–∏—Å—Ç–∏—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–∏—Ö —Å—Ç–∞—Ä–∏—Ö –¥–∞–Ω–∏—Ö\r\n                    const sensorChartEl = document.getElementById(`chart-${sensor.sensorId}`);\r\n                    if (sensorChartEl) sensorChartEl.innerHTML = '';\r\n                });\r\n            }\r\n        };\r\n\r\n        if (isLoading || error || !chartData) { // –Ø–∫—â–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, –ø–æ–º–∏–ª–∫–∞, –∞–±–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö\r\n            clearCharts();\r\n            if (!chartData || error) return; // –ù–µ –º–∞–ª—é–≤–∞—Ç–∏, —è–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –∞–±–æ —î –ø–æ–º–∏–ª–∫–∞\r\n        }\r\n\r\n        // –Ø–∫—â–æ –º–∏ –¥—ñ–π—à–ª–∏ —Å—é–¥–∏, isLoading=false, error=null, chartData —î\r\n        // –°–ø–æ—á–∞—Ç–∫—É –æ—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –ø–µ—Ä–µ–¥ –º–∞–ª—é–≤–∞–Ω–Ω—è–º –Ω–æ–≤–∏—Ö\r\n        clearCharts();\r\n\r\n\r\n        // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –ø–æ —Å–µ–Ω—Å–æ—Ä–∞—Ö\r\n        chartData.aggregatedData.forEach(sensor => {\r\n            const containerId = `chart-${sensor.sensorId}`;\r\n            // ... –ª–æ–≥—ñ–∫–∞ labels, values ...\r\n            const labels = sensor.data.map(/* ... */);\r\n            const values = sensor.data.map(/* ... */);\r\n\r\n            try { // –î–æ–¥–∞–Ω–æ try-catch –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞\r\n                const newChart = new Chartist.Line(`#${containerId}`, {\r\n                    labels,\r\n                    series: [values],\r\n                }, { /* ... options ... */ });\r\n                chartInstancesRef.current[containerId] = newChart;\r\n            } catch(e) {\r\n                console.error(`Failed to create chart for sensor ${sensor.sensorId}:`, e);\r\n            }\r\n        });\r\n\r\n        // –ó–∞–≥–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫\r\n        // ... –≤–∞—à–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è sensorTypesMap, allTimestamps, labels, series ...\r\n        try { // –î–æ–¥–∞–Ω–æ try-catch\r\n            const overallChartInstance = new Chartist.Line('#overall-chart', {\r\n                labels, // labels –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞\r\n                series, // series –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞\r\n            }, { /* ... options ... */ });\r\n            chartInstancesRef.current['overall-chart'] = overallChartInstance;\r\n        } catch(e) {\r\n            console.error(\"Failed to create overall chart:\", e);\r\n        }\r\n\r\n\r\n        // –§—É–Ω–∫—Ü—ñ—è –æ—á–∏—â–µ–Ω–Ω—è –¥–ª—è —Ü—å–æ–≥–æ useEffect (—Å–ø—Ä–∞—Ü—é—î –ø—Ä–∏ –∑–º—ñ–Ω—ñ chartData, error –∞–±–æ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ)\r\n        return () => {\r\n            clearCharts();\r\n        };\r\n    }, [chartData, error, isLoading, t]);\r\n\r\n    // –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ø–µ—Ä—ñ–æ–¥—É —á–∞—Å—É\r\n    useEffect(() => {\r\n        if (id) {\r\n            fetchData();\r\n        }\r\n    }, [timeRange]);\r\n\r\n    useEffect(() => {\r\n        if (!chartData || !chartContainerRef.current) return;\r\n\r\n        // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –ø–æ —Å–µ–Ω—Å–æ—Ä–∞—Ö\r\n        chartData.aggregatedData.forEach(sensor => {\r\n            const containerId = `chart-${sensor.sensorId}`;\r\n            const labels = sensor.data.map(entry => {\r\n                const date = new Date(entry.timestamp || entry.createdAt);\r\n                return `${date.getDate().toString().padStart(2, '0')}.${(date.getMonth() + 1)\r\n                    .toString()\r\n                    .padStart(2, '0')}`;\r\n            });\r\n\r\n            const values = sensor.data.map(entry => entry.value);\r\n\r\n            new Chartist.Line(`#${containerId}`, {\r\n                labels,\r\n                series: [values],\r\n            }, {\r\n                fullWidth: true,\r\n                chartPadding: { right: 40 },\r\n                axisX: {\r\n                    showGrid: false,\r\n                    labelInterpolationFnc: (value, index) => index % 3 === 0 ? value : null,\r\n                }\r\n            });\r\n        });\r\n\r\n        // üîµ –ó–∞–≥–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫\r\n        const sensorTypesMap = {};\r\n\r\n        chartData.aggregatedData.forEach(sensor => {\r\n            sensor.data.forEach(entry => {\r\n                const timeKey = new Date(entry.timestamp || entry.createdAt).toISOString().slice(0, 16); // –¥–æ —Ö–≤–∏–ª–∏–Ω\r\n                if (!sensorTypesMap[sensor.sensorType]) sensorTypesMap[sensor.sensorType] = {};\r\n                if (!sensorTypesMap[sensor.sensorType][timeKey]) {\r\n                    sensorTypesMap[sensor.sensorType][timeKey] = [];\r\n                }\r\n                sensorTypesMap[sensor.sensorType][timeKey].push(entry.value);\r\n            });\r\n        });\r\n\r\n        const allTimestamps = Array.from(\r\n            new Set(Object.values(sensorTypesMap).flatMap(typeData => Object.keys(typeData)))\r\n        ).sort();\r\n\r\n        const labels = allTimestamps.map(ts => {\r\n            const date = new Date(ts);\r\n            return `${date.getDate().toString().padStart(2, '0')}.${(date.getMonth() + 1).toString().padStart(2, '0')}`;\r\n        });\r\n\r\n        const series = Object.keys(sensorTypesMap).map(sensorType => {\r\n            return allTimestamps.map(ts => {\r\n                const values = sensorTypesMap[sensorType][ts];\r\n                if (!values || values.length === 0) return null;\r\n                const avg = values.reduce((sum, val) => sum + val, 0) / values.length;\r\n                return +avg.toFixed(2);\r\n            });\r\n        });\r\n\r\n        new Chartist.Line('#overall-chart', {\r\n            labels,\r\n            series,\r\n        }, {\r\n            fullWidth: true,\r\n            chartPadding: { right: 40 },\r\n            axisX: {\r\n                showGrid: false,\r\n                labelInterpolationFnc: (value, index) => index % 1 === 0 ? value : null,\r\n            },\r\n            lineSmooth: Chartist.Interpolation.cardinal({\r\n                tension: 0.2\r\n            })\r\n        });\r\n    }, [chartData]);\r\n\r\n\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setChartData(null);\r\n\r\n        try {\r\n            const response = await api.get(`/field-measurements/chart/${timeRange}`);\r\n            setChartData(response.data);\r\n        } catch (err) {\r\n            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏:', err);\r\n            setError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n\r\n    }, [timeRange]);\r\n\r\n    const handleTimeRangeChange = (range) => {\r\n        if (range !== timeRange && !isLoading) {\r\n            setTimeRange(range);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"main-content\" className=\"w-full flex-1 bg-gray-100 p-6\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n                <div className=\"bg-white shadow rounded-lg p-4 md:p-6\">\r\n                    <div className=\"flex justify-between items-center border-b border-gray-200 pb-3 mb-4\">\r\n                        <h5 className=\"text-xl font-bold text-gray-900\">\r\n                            –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –≤–∏–º—ñ—Ä—é–≤–∞–Ω—å {id ? `–¥–ª—è –ø–æ–ª—è ID: ${id}` : '(–ü–æ–ª–µ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ)'}\r\n                        </h5>\r\n                        <div className=\"flex space-x-2\">\r\n                            {['7d', '6m', '1y'].map(range => (\r\n                                <button\r\n                                    key={range}\r\n                                    onClick={() => handleTimeRangeChange(range)}\r\n                                    disabled={isLoading}\r\n                                    className={`px-3 py-1 text-sm font-medium rounded transition-colors duration-150 ease-in-out ${\r\n                                        timeRange === range\r\n                                            ? 'bg-blue-600 text-white hover:bg-blue-700'\r\n                                            : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                                    } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                                >\r\n                                    {range.toUpperCase()}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isLoading && <p className=\"text-blue-600\">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...</p>}\r\n                    {error && <p className=\"text-red-600\">{error}</p>}\r\n\r\n                    {chartData && (\r\n                        <div className=\"mb-8\">\r\n                            <h6 className=\"font-semibold text-lg mb-2\">{t(`general_analytics`)}</h6>\r\n                            <div id=\"overall-chart\" className=\"ct-chart ct-major-twelfth\"></div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {chartData && (\r\n                        <div>\r\n                            <h6 className=\"font-semibold text-lg mb-2\">{t(`aggregated_data`)}</h6>\r\n                            <div className=\"space-y-4\">\r\n                                {chartData.aggregatedData.map(sensor => (\r\n                                    <div key={sensor.sensorId} className=\"p-4 bg-gray-50 rounded shadow-sm\">\r\n                                        <h6 className=\"font-bold\">{sensor.sensorType}</h6>\r\n                                        <p><strong>Min:</strong> {sensor.min}</p>\r\n                                        <p><strong>Max:</strong> {sensor.max}</p>\r\n                                        <p><strong>Avg:</strong> {sensor.average}</p>\r\n                                        <div\r\n                                            id={`chart-${sensor.sensorId}`}\r\n                                            className=\"ct-chart ct-major-tenth mt-4\"\r\n                                            style={{ height: '300px' }}\r\n                                            ref={chartContainerRef}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnalyticsField;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}