{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\WebstormProjects\\\\soil_scout\\\\web\\\\src\\\\components\\\\AnalyticsField.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Line as LineChart } from 'chartist';\nimport 'chartist/dist/chartist.css';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyticsField = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [timeRange, setTimeRange] = useState('7d');\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const chartContainerRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const selectField = useCallback(async fieldId => {\n    if (!fieldId) return;\n    try {\n      await api.post('/fields/select/', {\n        fieldId\n      });\n    } catch (err) {\n      console.error('Field selection error:', err);\n      throw new Error(`Не вдалося вибрати поле ID ${fieldId}.`);\n    }\n  }, []);\n  const deselectField = useCallback(async fieldId => {\n    if (!fieldId) return;\n    try {\n      await api.post('/fields/deselect/', {\n        fieldId\n      });\n    } catch (err) {\n      console.error('Field deselection error:', err);\n    }\n  }, []);\n  useEffect(() => {\n    if (!id) {\n      setChartData(null);\n      setError(null);\n      setIsLoading(false);\n      return;\n    }\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError(null);\n      setChartData(null);\n      try {\n        var _response$data;\n        await selectField(id);\n        const response = await api.get(`/field-measurements/chart/${timeRange}`);\n        const rawData = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.aggregatedData;\n        if (!Array.isArray(rawData)) {\n          throw new Error('Некоректний формат даних');\n        }\n        const uniqueTimestamps = new Set();\n        rawData.forEach(sensor => {\n          var _sensor$data;\n          sensor === null || sensor === void 0 ? void 0 : (_sensor$data = sensor.data) === null || _sensor$data === void 0 ? void 0 : _sensor$data.forEach(entry => {\n            if (entry !== null && entry !== void 0 && entry.timestamp) uniqueTimestamps.add(entry.timestamp);\n          });\n        });\n        const labels = Array.from(uniqueTimestamps).sort((a, b) => new Date(a) - new Date(b));\n        const series = rawData.map(sensor => {\n          var _sensor$data2;\n          const timestampMap = new Map();\n          sensor === null || sensor === void 0 ? void 0 : (_sensor$data2 = sensor.data) === null || _sensor$data2 === void 0 ? void 0 : _sensor$data2.forEach(entry => {\n            if (entry !== null && entry !== void 0 && entry.timestamp && entry.value !== undefined && entry.value !== null) {\n              timestampMap.set(entry.timestamp, entry.value);\n            }\n          });\n          const seriesData = labels.map(ts => {\n            var _timestampMap$get;\n            return (_timestampMap$get = timestampMap.get(ts)) !== null && _timestampMap$get !== void 0 ? _timestampMap$get : null;\n          });\n          return seriesData;\n        });\n        const hasData = series.some(s => s.some(v => v !== null));\n        setChartData(hasData ? {\n          labels,\n          series\n        } : null);\n      } catch (err) {\n        console.error('Помилка при завантаженні даних:', err);\n        setError(err.message || 'Помилка при завантаженні');\n        setChartData(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n    return () => {\n      if (id) deselectField(id);\n    };\n  }, [id, timeRange, selectField, deselectField]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0410\\u043D\\u0430\\u043B\\u0456\\u0442\\u0438\\u043A\\u0430 \\u043F\\u043E\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0434\\u0430\\u043D\\u0438\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }, this), !isLoading && !error && !chartData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0414\\u0430\\u043D\\u0456 \\u0432\\u0456\\u0434\\u0441\\u0443\\u0442\\u043D\\u0456.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 52\n    }, this), !isLoading && chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        options: {\n          showPoint: true,\n          fullWidth: true\n        },\n        type: \"Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(AnalyticsField, \"jPTjGEibw7/Jm0+oHXdWvqa+L5g=\", false, function () {\n  return [useParams];\n});\n_c = AnalyticsField;\nexport default AnalyticsField;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsField\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","useParams","Line","LineChart","api","jsxDEV","_jsxDEV","AnalyticsField","_s","id","timeRange","setTimeRange","chartData","setChartData","isLoading","setIsLoading","error","setError","chartContainerRef","chartInstanceRef","selectField","fieldId","post","err","console","Error","deselectField","fetchData","_response$data","response","get","rawData","data","aggregatedData","Array","isArray","uniqueTimestamps","Set","forEach","sensor","_sensor$data","entry","timestamp","add","labels","from","sort","a","b","Date","series","map","_sensor$data2","timestampMap","Map","value","undefined","set","seriesData","ts","_timestampMap$get","hasData","some","s","v","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","ref","options","showPoint","fullWidth","type","_c","$RefreshReg$"],"sources":["D:/Program Files/WebstormProjects/soil_scout/web/src/components/AnalyticsField.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Line as LineChart } from 'chartist';\r\nimport 'chartist/dist/chartist.css';\r\nimport api from '../utils/api';\r\n\r\nconst AnalyticsField = () => {\r\n    const { id } = useParams();\r\n\r\n    const [timeRange, setTimeRange] = useState('7d');\r\n    const [chartData, setChartData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const chartContainerRef = useRef(null);\r\n    const chartInstanceRef = useRef(null);\r\n\r\n    const selectField = useCallback(async (fieldId) => {\r\n        if (!fieldId) return;\r\n        try {\r\n            await api.post('/fields/select/', { fieldId });\r\n        } catch (err) {\r\n            console.error('Field selection error:', err);\r\n            throw new Error(`Не вдалося вибрати поле ID ${fieldId}.`);\r\n        }\r\n    }, []);\r\n\r\n    const deselectField = useCallback(async (fieldId) => {\r\n        if (!fieldId) return;\r\n        try {\r\n            await api.post('/fields/deselect/', { fieldId });\r\n        } catch (err) {\r\n            console.error('Field deselection error:', err);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            setChartData(null);\r\n            setError(null);\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            setChartData(null);\r\n\r\n            try {\r\n                await selectField(id);\r\n\r\n                const response = await api.get(`/field-measurements/chart/${timeRange}`);\r\n                const rawData = response.data?.aggregatedData;\r\n\r\n                if (!Array.isArray(rawData)) {\r\n                    throw new Error('Некоректний формат даних');\r\n                }\r\n\r\n                const uniqueTimestamps = new Set();\r\n                rawData.forEach(sensor => {\r\n                    sensor?.data?.forEach(entry => {\r\n                        if (entry?.timestamp) uniqueTimestamps.add(entry.timestamp);\r\n                    });\r\n                });\r\n\r\n                const labels = Array.from(uniqueTimestamps).sort((a, b) => new Date(a) - new Date(b));\r\n\r\n                const series = rawData.map(sensor => {\r\n                    const timestampMap = new Map();\r\n                    sensor?.data?.forEach(entry => {\r\n                        if (entry?.timestamp && entry.value !== undefined && entry.value !== null) {\r\n                            timestampMap.set(entry.timestamp, entry.value);\r\n                        }\r\n                    });\r\n                    const seriesData = labels.map(ts => timestampMap.get(ts) ?? null);\r\n                    return seriesData;\r\n                });\r\n\r\n                const hasData = series.some(s => s.some(v => v !== null));\r\n                setChartData(hasData ? { labels, series } : null);\r\n            } catch (err) {\r\n                console.error('Помилка при завантаженні даних:', err);\r\n                setError(err.message || 'Помилка при завантаженні');\r\n                setChartData(null);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n        return () => {\r\n            if (id) deselectField(id);\r\n        };\r\n    }, [id, timeRange, selectField, deselectField]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Аналітика поля</h2>\r\n            {isLoading && <p>Завантаження даних...</p>}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {!isLoading && !error && !chartData && <p>Дані відсутні.</p>}\r\n            {!isLoading && chartData && (\r\n                <div ref={chartContainerRef}>\r\n                    <LineChart\r\n                        data={chartData}\r\n                        options={{ showPoint: true, fullWidth: true }}\r\n                        type=\"Line\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnalyticsField;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}